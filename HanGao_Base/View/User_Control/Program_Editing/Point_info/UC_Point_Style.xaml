<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="clr-namespace:NumericUpDownLib;assembly=NumericUpDownLib" xmlns:conv="clr-namespace:NumericUpDownLib.Converters;assembly=NumericUpDownLib" xmlns:local="clr-namespace:NumericUpDownLib.Base;assembly=NumericUpDownLib" xmlns:reskeys="clr-namespace:NumericUpDownLib.Themes;assembly=NumericUpDownLib">


    <Style x:Key="InPut_TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource 全局_按钮_黑颜色}" />

        <Setter Property="Height" Value="40" />
        <Setter Property="Foreground" Value="{DynamicResource 全局_按钮_黑颜色}" />
        <Setter Property="BorderThickness" Value="3" />

        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FontSize" Value="22" />

        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="50" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="0"
                                          Margin="1"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />

                            <Grid Grid.Column="1" Margin="0,0,2,0">
                                <TextBlock Name="Unit_Text"
                                           Text="{TemplateBinding Tag}"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}" />
                                <!--<Grid Name="Function_Grid" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Button Style="{DynamicResource ButtonStyle3}" Grid.Column="0"
                                            Width="22"
                                            Height=" 22"
                                            Background="Transparent">
                                        <Button.Content>
                                            <TextBlock Text="&#xe639;"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       FontFamily="{DynamicResource 全局_图标库}"
                                                       FontSize="14"
                                                       Foreground="{DynamicResource 全局_按钮_蓝颜色}" />
                                        </Button.Content>
                                    </Button>
                                    <Button Style="{DynamicResource ButtonStyle3}" Grid.Column="1"
                                            Width=" 22"
                                            Height=" 22"
                                            Background="Transparent">
                                        <Button.Content>
                                            <TextBlock Text="&#xe644;"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       FontFamily="{DynamicResource 全局_图标库}"
                                                       FontSize="16"
                                                       Foreground="{DynamicResource 全局_按钮_蓝颜色}" />
                                        </Button.Content>
                                    </Button>
                                </Grid>-->
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter TargetName="Function_Grid" Property="Visibility" Value="Visible" />-->
                            <Setter TargetName="Unit_Text" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource 全局_按钮_蓝颜色}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <!--<Setter TargetName="Function_Grid" Property="Visibility" Value="Visible" />-->
                            <Setter TargetName="Unit_Text" Property="Visibility" Value="Collapsed" />

                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource 全局_按钮_蓝颜色}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <!--<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />-->
            </MultiTrigger>
        </Style.Triggers>
    </Style>




    <Style x:Key="+_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#f0d59c" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                            <!--<Setter Property="Effect" Value="{DynamicResource 全局背景阴影}" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.3" />

                            <!--<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  数字按键样式  -->

    <Style x:Key="DoubleUpDown_Style" TargetType="{x:Type controls:DoubleUpDown}">
        <Setter Property="BorderThickness" Value="2.5" />
        <Setter Property="BorderBrush" Value="{DynamicResource 全局_按钮_黑颜色}" />
        <Setter Property="Foreground" Value="{DynamicResource 全局_按钮_黑颜色}" />
        <Setter Property="IsDisplayLengthFixed" Value="True" />
        <Setter Property="IsMouseDragEnabled" Value="False" />
        <Setter Property="IsReadOnly" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DoubleUpDown}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid MinWidth="{Binding MinWidth, RelativeSource={RelativeSource TemplatedParent}}"
                              Margin="0"
                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Grid.Resources>
                                <conv:ByteToPlaceHolderStringConverter x:Key="ByteToPlaceHolderStringConverter" />
                                <conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityPropConverter" />
                            </Grid.Resources>


                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>




                            <Grid Grid.Row=" 0" Grid.Column="1"
                                  Grid.RowSpan=" 2">


                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <TextBox x:Name="PART_Measuring_Element" Grid.Column=" 0"
                                         Text="{Binding DisplayLength, Converter={StaticResource ByteToPlaceHolderStringConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                         Margin="0,0,0,0"
                                         HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                         VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         AcceptsReturn="False"
                                         Background="Transparent"
                                         BorderThickness="0"
                                         FontSize="{TemplateBinding FontSize}"
                                         Foreground="Transparent"
                                         IsEnabled="False"
                                         TextAlignment="Right"
                                         Visibility="Hidden" />
                                <TextBox x:Name="PART_TextBox" Grid.Column=" 0"
                                         Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}"
                                         Margin="0"
                                         Padding="0"
                                         HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                         VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         AcceptsReturn="False"
                                         Background="{TemplateBinding Background}"
                                         BorderThickness="0"
                                         FontSize="{TemplateBinding FontSize}"
                                         Foreground="{TemplateBinding Foreground}"
                                         IsEnabled="{TemplateBinding IsEnabled}"
                                         IsReadOnly="{TemplateBinding IsReadOnly}" />
                                <TextBlock Grid.Column=" 0"
                                           Text="*"
                                           Margin="0,0"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Top"
                                           Background="#00ffffff"
                                           Visibility="Collapsed" />




                            </Grid>

                            <TextBlock x:Name="Unit_Text" Grid.Column=" 1"
                                       Grid.ColumnSpan=" 2"
                                       Text="{TemplateBinding Tag}"
                                       Margin="2"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontSize="{TemplateBinding FontSize}" />

                            <local:NumericRepeatButtonControl Style="{DynamicResource NumericRepeatButtonControl_Style}" x:Name="PART_IncrementButton" Grid.Row="0" Grid.Column="2"
                                                              HorizontalContentAlignment="Center"
                                                              VerticalContentAlignment="Center"
                                                              Background="{DynamicResource 全局_按钮_黑颜色}"
                                                              BorderThickness="0"
                                                              ClickCommand="{x:Static local:InputBaseUpDown.IncreaseCommand}"
                                                              Visibility="Hidden">
                                <!--  Visibility="{Binding IsIncDecButtonsVisible, Converter={StaticResource BoolToVisibilityPropConverter}, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type local:InputBaseUpDown}}, UpdateSourceTrigger=PropertyChanged}"  -->
                                <TextBlock Text="&#xe639;"
                                           Margin="4"
                                           FontFamily="/Resources/#iconfont"
                                           Foreground="{DynamicResource 全局_按钮_黑颜色}" />

                            </local:NumericRepeatButtonControl>


                            <local:NumericRepeatButtonControl Style="{DynamicResource NumericRepeatButtonControl_Style}" x:Name="PART_DecrementButton" Grid.Row="1" Grid.Column="0"
                                                              HorizontalContentAlignment="Center"
                                                              VerticalContentAlignment="Center"
                                                              Background="{DynamicResource 全局_按钮_黑颜色}"
                                                              BorderThickness="0"
                                                              ClickCommand="{x:Static local:InputBaseUpDown.DecreaseCommand}"
                                                              Visibility="Hidden">
                                <!--  Visibility="{Binding IsIncDecButtonsVisible, Converter={StaticResource BoolToVisibilityPropConverter}, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type local:InputBaseUpDown}}, UpdateSourceTrigger=PropertyChanged}"  -->
                                <TextBlock Text="&#xe643;"
                                           Margin="4"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontFamily="/Resources/#iconfont"
                                           Foreground="{DynamicResource 全局_按钮_黑颜色}" />
                            </local:NumericRepeatButtonControl>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.53" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_IncrementButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_DecrementButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Unit_Text" Property="Visibility" Value="Collapsed" />
                            <Setter Property="BorderBrush" Value="{DynamicResource     全局_按钮_蓝颜色}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="PART_IncrementButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_DecrementButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Unit_Text" Property="Visibility" Value="Collapsed" />
                            <Setter Property="BorderBrush" Value="{DynamicResource  全局_按钮_蓝颜色}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  加减按钮样式  -->
    <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource 全局_按钮_灰颜色}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource 全局_按钮_黑颜色}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value=" 0.8" />
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" Value=" 0.5" />
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  加减按钮基本样式  -->
    <Style x:Key="RepeatButton_Style"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
    </Style>


    <!--  数字按钮样式  -->
    <Style x:Key="NumericRepeatButtonControl_Style" TargetType="{x:Type local:NumericRepeatButtonControl}">
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NumericRepeatButtonControl}">
                    <Border HorizontalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <RepeatButton Style="{DynamicResource RepeatButton_Style}" x:Name="MyRepeatButton"
                                          Command="{TemplateBinding ClickCommand}"
                                          Padding="0"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Stretch"
                                          BorderThickness="0">

                                <Grid x:Name="arrowGlyph"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      IsHitTestVisible="False">
                                    <ContentPresenter x:Name="contentPresenter"
                                                      Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Focusable="False"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <!--<Path x:Name="Arrow"
                                          Width="7"
                                          Margin="0"
                                          Data="{TemplateBinding RepeatButtonContent}"
                                          Fill="{DynamicResource {x:Static reskeys:ResourceKeys.GlyphNormalForegroundKey}}"
                                          Stretch="UniformToFill"
                                          Visibility="Collapsed" />-->

                                </Grid>
                            </RepeatButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                            <!--<Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.GlyphDisabledForegroundKey}}" />-->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition SourceName="MyRepeatButton" Property="IsPressed" Value="false" />
                            </MultiTrigger.Conditions>
                            <!--<Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.GlyphMouseOverForegroundKey}}" />-->
                        </MultiTrigger>
                        <Trigger SourceName="MyRepeatButton" Property="IsPressed" Value="True">
                            <!--<Setter TargetName="arrowGlyph" Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.GlyphPressedBackroundKey}}" />-->
                            <!--<Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static reskeys:ResourceKeys.GlyphNormalForegroundKey}}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  浮点数字按键样式  -->
    <Style x:Key="DoubleUpDown_Style1" TargetType="{x:Type controls:DoubleUpDown}">
        <Setter Property="IsMouseDragEnabled" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DoubleUpDown}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid MinWidth="{Binding MinWidth, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top">
                            <Grid.Resources>
                                <conv:ByteToPlaceHolderStringConverter x:Key="ByteToPlaceHolderStringConverter" />
                                <conv:BoolToVisibilityPropConverter x:Key="BoolToVisibilityPropConverter" />
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid Grid.RowSpan="2" Grid.Column="0">
                                <TextBox x:Name="PART_Measuring_Element"
                                         Text="{Binding DisplayLength, Converter={StaticResource ByteToPlaceHolderStringConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                         Margin="0,0,1,0"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Stretch"
                                         HorizontalContentAlignment="Right"
                                         VerticalContentAlignment="{TemplateBinding VerticalAlignment}"
                                         AcceptsReturn="False"
                                         Background="Transparent"
                                         Foreground="Transparent"
                                         IsEnabled="False"
                                         TextAlignment="Right" />
                                <TextBox x:Name="PART_TextBox"
                                         Margin="1,0,1,0"
                                         Padding="0"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Stretch"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="Center"
                                         AcceptsReturn="False"
                                         Background="{TemplateBinding Background}"
                                         BorderThickness="0"
                                         Foreground="{TemplateBinding Foreground}"
                                         IsEnabled="False"
                                         IsReadOnly="{TemplateBinding IsReadOnly}" />
                                <!--<TextBlock Text="*"
                                           Margin="3,0"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Top"
                                           Background="#00ffffff"
                                           Foreground="{TemplateBinding}"
                                           Visibility="{TemplateBinding}" />-->
                            </Grid>
                            <local:NumericRepeatButtonControl Style="{DynamicResource NumericRepeatButtonControl_Style}" x:Name="PART_IncrementButton" Grid.Row="0" Grid.Column="1"
                                                              HorizontalAlignment="Right"
                                                              ClickCommand="{x:Static local:InputBaseUpDown.IncreaseCommand}"
                                                              Visibility="{Binding IsIncDecButtonsVisible, Converter={StaticResource BoolToVisibilityPropConverter}, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type local:InputBaseUpDown}}, UpdateSourceTrigger=PropertyChanged}">
                                <TextBlock Text="&#xe76d;"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontFamily="/Resources/#iconfont"
                                           Foreground="{DynamicResource 全局_按钮_黑颜色}" />

                            </local:NumericRepeatButtonControl>
                            <local:NumericRepeatButtonControl Style="{DynamicResource NumericRepeatButtonControl_Style}" x:Name="PART_DecrementButton" Grid.Row="1" Grid.Column="1"
                                                              HorizontalAlignment="Right"
                                                              ClickCommand="{x:Static local:InputBaseUpDown.DecreaseCommand}"
                                                              Visibility="{Binding IsIncDecButtonsVisible, Converter={StaticResource BoolToVisibilityPropConverter}, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type local:InputBaseUpDown}}, UpdateSourceTrigger=PropertyChanged}">
                                <TextBlock Text="&#xe771;"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontFamily="/Resources/#iconfont"
                                           Foreground="{DynamicResource 全局_按钮_黑颜色}" />
                            </local:NumericRepeatButtonControl>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






</ResourceDictionary>