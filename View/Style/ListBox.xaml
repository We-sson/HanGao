<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Xml="clr-namespace:HanGao.Model" xmlns:us="clr-namespace:HanGao.View.Style" xmlns:n="clr-namespace:Nicenis.Windows;assembly=Nicenis" xmlns:i="http://schemas.microsoft.com/xaml/behaviors" xmlns:cmd="http://www.galasoft.ch/mvvmlight" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:b="http://schemas.microsoft.com/xaml/behaviors" mc:Ignorable="d">
    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3" />
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9" />


    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA" />
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA" />
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA" />

    <!--  列表总模板  -->

    <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource ListBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Margin" Value="-8" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd"
                            Padding="0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      Template="{DynamicResource ScrollViewerControlTemplate1}"
                                      CanContentScroll="True"
                                      Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>



                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--  列表每一项模板  -->

    <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            Margin="0,0,0,10"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>



                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>


                        </MultiTrigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>-->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />

                        </MultiTrigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="Gray" />
                        </Trigger>
                        <!--<Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  列表数据模板  -->
    <DataTemplate x:Key="DataTemplate1">


        <Grid x:Name="Gd5"
              Width="380"
              VerticalAlignment="Top"
              Visibility="{Binding Sink_UI.List_Show}"
              ShowGridLines="False">

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Border x:Name="Gb1" Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Height=" 145"
                    VerticalAlignment="Stretch"
                    Background="#334257"
                    CornerRadius="8">

                <Border.Effect>
                    <DropShadowEffect BlurRadius="20"
                                      ShadowDepth="0"
                                      Opacity="0.2"
                                      Color="#125D98" />
                </Border.Effect>
            </Border>

            <Border Grid.Column="1"
                    Grid.ColumnSpan="2"
                    CornerRadius="8"
                    Background="#ececec" />


            <Grid x:Name="Gd2"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  ShowGridLines="False"
                  Opacity="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width=" *" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>



                <StackPanel Grid.Column="0"
                            Margin="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                    <TextBlock x:Name="Tb_ICO"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Foreground="#EEEEEE"
                               FontFamily="/Resources/#iconfont"
                               FontSize="80">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Sink_Process.Sink_Type}" Value="LeftRight_One">
                                        <Setter Property="TextBlock.Text" Value="&#xe61b;" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Sink_Process.Sink_Type}" Value="UpDown_One">
                                        <Setter Property="TextBlock.Text" Value="&#xe61a;" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Sink_Process.Sink_Type}" Value="LeftRight_Two">
                                        <Setter Property="TextBlock.Text" Value="&#xe61d;" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">


                        <TextBlock Margin="0,10,0,0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontFamily="DengXian Light"
                                   FontSize="35"
                                   Foreground="#EEEEEE">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}X{1}">
                                    <Binding Path="Sink_Process.Sink_Size_Long" />
                                    <Binding Path=" Sink_Process.Sink_Size_Width" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <!--<TextBlock Text="{Binding Sink_Process.Sink_Size_Width}"
                                   Margin="0,10,0,0"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontFamily="DengXian Light"
                                   FontSize="35"
                                   Foreground="#EEEEEE" />-->

                    </StackPanel>

                </StackPanel>


            </Grid>

            <Grid Grid.Column="1"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Center"
                  ShowGridLines="False">

                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>





                <TextBlock Grid.Row="0"
                           Text="{Binding Sink_Process.Sink_Model}"
                           Margin="0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Stretch"
                           FontFamily="DengXian Light"
                           FontSize="48"
                           Foreground="#333333" />

                <StackPanel Grid.Row="1"
                            Margin="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch">



                    <StackPanel Margin="0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Orientation="Vertical">
                        <StackPanel Margin="5"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Orientation="Horizontal">



                            <CheckBox Uid="N1"
                                      IsChecked="{Binding Sink_UI.List_IsChecked_1}"
                                      Width=" 30"
                                      Height="30"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Stretch"
                                      BorderThickness="1.5"
                                      BorderBrush="#FFC947">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding DataContext.Set_Working_Comm, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                               CommandParameter="{Binding EventArgsConverter, RelativeSource={RelativeSource Mode=Self}}"
                                                               PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle2}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Sink_UI.UI_Checked_Type_1}" Value="Readinh">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Sink_UI.UI_Checked_Type_1}" Value="Ok">
                                                <Setter Property="IsEnabled" Value="True" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>


                            <TextBlock Text="1号加载"
                                       Margin="5"
                                       VerticalAlignment="Center"
                                       FontFamily="DengXian"
                                       FontSize="18"
                                       Foreground="Gray" />
                            <Button Style="{DynamicResource ButtonStyle3}" Grid.Column="1"
                                    Uid="N1"
                                    Width="36"
                                    Height="36"
                                    Margin="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="#ECD662">
                                <Button.Content>
                                    <TextBlock Text="&#xe708;"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontFamily="/Resources/#iconfont"
                                               FontSize="20" />
                                </Button.Content>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding DataContext.Show_Pop_Ups_Page, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                               CommandParameter="{Binding EventArgsConverter, RelativeSource={RelativeSource Mode=Self}}"
                                                               PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>

                        </StackPanel>
                        <StackPanel Margin="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">

                            <CheckBox Uid="N2"
                                      IsChecked="{Binding Sink_UI.List_IsChecked_2}"
                                      Width=" 30"
                                      Height="30"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      BorderThickness="1.5"
                                      BorderBrush="#FFC947">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding DataContext.Set_Working_Comm, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                               CommandParameter="{Binding EventArgsConverter, RelativeSource={RelativeSource Mode=Self}}"
                                                               PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle2}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Sink_UI.UI_Checked_Type_2}" Value="Readinh">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Sink_UI.UI_Checked_Type_2}" Value="Ok">
                                                <Setter Property="IsEnabled" Value="True" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>


                            <TextBlock Text="2号加载"
                                       Margin="5"
                                       VerticalAlignment="Center"
                                       FontFamily="DengXian"
                                       FontSize="18"
                                       Foreground="Gray" />
                            <Button Style="{DynamicResource ButtonStyle3}" Grid.Column="1"
                                    Uid="N2"
                                    Width="36"
                                    Height="36"
                                    Margin="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="#ECD662">
                                <Button.Content>
                                    <TextBlock Text="&#xe708;"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontFamily="/Resources/#iconfont"
                                               FontSize="20" />
                                </Button.Content>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding DataContext.Show_Pop_Ups_Page, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                               CommandParameter="{Binding EventArgsConverter, RelativeSource={RelativeSource Mode=Self}}"
                                                               PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>

                        </StackPanel>
                    </StackPanel>







                </StackPanel>


            </Grid>



        </Grid>





    </DataTemplate>
</ResourceDictionary>