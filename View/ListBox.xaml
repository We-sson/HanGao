<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:us="clr-namespace:HanGao.View.Style" xmlns:local="clr-namespace:HanGao.View" xmlns:n="clr-namespace:Nicenis.Windows;assembly=Nicenis" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:cmd="http://www.galasoft.ch/mvvmlight" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:b="http://schemas.microsoft.com/xaml/behaviors" mc:Ignorable="d">
    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3" />
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9" />


    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA" />
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA" />
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA" />

    <!--  列表总模板  -->

    <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd"
                            Padding="0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Template="{DynamicResource ScrollViewerControlTemplate1}"
                                      CanContentScroll="True"
                                      Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>



                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--  列表每一项模板  -->

    <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            Margin="0,0,0,10"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>



                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>


                        </MultiTrigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>-->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />

                        </MultiTrigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <!--<Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  列表数据模板  -->
    <DataTemplate x:Key="DataTemplate1" DataType="{x:Type CheckBox}">


        <Grid x:Name="Gd5" d:DesignWidth="300" ShowGridLines="False">

            <Grid.RowDefinitions>
                <RowDefinition x:Name="Grd" Height="auto" />
                <RowDefinition x:Name="Grd1" />
            </Grid.RowDefinitions>

            <Border x:Name="Gb1" Grid.Row="0"
                    Padding="0" VerticalAlignment="Center"
                    Opacity="1" Background="#334257"
                    BorderThickness="0" BorderBrush="Black"
                    CornerRadius="10"
                    RenderTransformOrigin="0.5,0.5"
                    Visibility="{Binding List_Show}">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1" />
                    </TransformGroup>
                </Border.RenderTransform>


                <Border.Effect>
                    <DropShadowEffect BlurRadius="20" ShadowDepth="0"
                                      Opacity="0.2" Color="#125D98" />
                </Border.Effect>



                <Grid x:Name="Gd2"
                      Margin="5" VerticalAlignment="Center"
                      ShowGridLines="True" Opacity="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="110" />
                        <ColumnDefinition Width="0" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>



                    <TextBlock Grid.Column="0"
                               Text="{Binding Photo_ico}"
                               Margin="0" HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Foreground="#EEEEEE"
                               FontFamily="/Resources/#iconfont"
                               FontSize="60" />
                    <Border Grid.Column="1"
                            Width="5" VerticalAlignment="Stretch"
                            Visibility="Collapsed"
                            Background="Black" />

                    <Grid Grid.Column="2" Margin="0" ShowGridLines="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Text="{Binding Model_Number}"
                                   Margin="5" HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontFamily="DengXian Light"
                                   FontSize="45" Foreground="#ECD662" />


                        <StackPanel Grid.Row="1" Grid.Column="0"
                                    Margin="5" HorizontalAlignment="Stretch"
                                    Orientation="Horizontal">



                            <CheckBox Style="{StaticResource CheckBoxStyle2}"
                                      Uid="1"
                                      IsChecked="{Binding List_IsChecked_1}"
                                      Width=" 28" Height="28" Margin="0,0,5,0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Stretch">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <cmd:EventToCommand Command="{Binding DataContext.Set_Working_Comm, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding EventArgsConverter, RelativeSource={RelativeSource Mode=Self}}" PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                            </CheckBox>


                            <TextBlock Text="NO.1" VerticalAlignment="Center"
                                       FontSize="18" Foreground="#EEEEEE" />
                        </StackPanel>

                        <StackPanel Grid.Row="1" Grid.Column="1"
                                    Margin="5" HorizontalAlignment="Stretch"
                                    Orientation="Horizontal">

                            <CheckBox Style="{StaticResource CheckBoxStyle2}"
                                      Uid="2"
                                      IsChecked="{Binding List_IsChecked_2}"
                                      Width=" 28" Height="28" Margin="0,0,5,0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Stretch">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <cmd:EventToCommand Command="{Binding DataContext.Set_Working_Comm, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding EventArgsConverter, RelativeSource={RelativeSource Mode=Self}}" PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                            </CheckBox>


                            <TextBlock Text="NO.2" VerticalAlignment="Center"
                                       FontSize="18" Foreground="#EEEEEE" />
                        </StackPanel>


                    </Grid>
                </Grid>
            </Border>

            <!--  以下部件取消  -->
            <Grid x:Name="Gd3" Grid.Row="1"
                  Width="300" Height="0" Panel.ZIndex="-1"
                  Visibility="Collapsed"
                  RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform Y="-10" />
                    </TransformGroup>
                </Grid.RenderTransform>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height=" 1.6*" />
                    <RowDefinition />
                </Grid.RowDefinitions>





                <Border x:Name="border" Grid.Row="0" Grid.Column="0"
                        Grid.ColumnSpan="2" Background="#E3E3E3">

                    <TextBlock Text="需要放置加工区域"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" FontSize="20" />
                </Border>


                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />

                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>



                    <Grid Style="{StaticResource Gd_Effect}" Grid.Column="0">


                        <CheckBox Style="{StaticResource CheckBoxStyle1}" x:Name="CB1"
                                  Uid="1" Content="1号工位"
                                  IsChecked="{Binding List_IsChecked_1}"
                                  Padding="0,0,0,0" FontSize="20"
                                  BorderThickness="0" Background="#C8C8C8">
                            <CheckBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="0 0 0 20" />
                                </Style>
                            </CheckBox.Resources>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <cmd:EventToCommand Command="{Binding DataContext.Set_Working_Comm, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding EventArgsConverter, RelativeSource={RelativeSource Mode=Self}}" PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </CheckBox>
                    </Grid>




                    <Grid Style="{StaticResource Gd_Effect}" Grid.Column="1">

                        <CheckBox Style="{StaticResource CheckBoxStyle1}" x:Name="CB2"
                                  Uid="2" Content="2号工位"
                                  IsChecked="{Binding List_IsChecked_2}"
                                  Padding="0" BorderThickness="0"
                                  FontSize="20" Background="#C8C8C8">

                            <CheckBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="0 0 20 0" />
                                </Style>
                            </CheckBox.Resources>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <cmd:EventToCommand Command="{Binding DataContext.Set_Working_Comm, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding EventArgsConverter, RelativeSource={RelativeSource Mode=Self}}" PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </CheckBox>
                    </Grid>
                </Grid>




            </Grid>


        </Grid>





        <DataTemplate.Triggers>




            <!--<DataTrigger Binding="{Binding IsChecked, ElementName=CB2}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation SpeedRatio="5"
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="EP2" To="#22AB38"
                                            Duration="0:0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation SpeedRatio="1"
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="EP2" To="#C8C8C8"
                                            Duration="0:0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>-->





            <!--<DataTrigger Binding="{Binding IsChecked, ElementName=CB1}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation SpeedRatio="5"
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="EP1" To="#22AB38"
                                            Duration="0:0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation SpeedRatio="5"
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="EP1" To="#C8C8C8"
                                            Duration="0:0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>





            </DataTrigger>-->


            <MultiTrigger>







                <MultiTrigger.Conditions>
                    <!--<Condition SourceName="Gb1" Property="IsKeyboardFocused" Value="True" />-->
                    <Condition SourceName="Gd5" Property="IsMouseOver" Value="True" />





                </MultiTrigger.Conditions>
                <!--<MultiTrigger.Setters>
                    <Setter TargetName="Gd3" Property="Height" Value="130" />
                </MultiTrigger.Setters>-->
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="60">
                            <DoubleAnimation SpeedRatio="5"
                                             Storyboard.TargetProperty="Height"
                                             Storyboard.TargetName="Gd3" To="130"
                                             Duration="0:0:0:1">
                                <DoubleAnimation.EasingFunction>
                                    <QuinticEase EasingMode="EaseIn" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Timeline.DesiredFrameRate="60">
                            <DoubleAnimation SpeedRatio="5"
                                             Storyboard.TargetProperty="Height"
                                             Storyboard.TargetName="Gd3" To="0"
                                             Duration="0:0:0:1">
                                <DoubleAnimation.EasingFunction>
                                    <QuinticEase EasingMode="EaseIn" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>




















            </MultiTrigger>

        </DataTemplate.Triggers>

    </DataTemplate>
</ResourceDictionary>