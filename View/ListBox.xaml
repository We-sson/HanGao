<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:us="clr-namespace:悍高软件.View.Style" xmlns:local="clr-namespace:悍高软件.View" xmlns:n="clr-namespace:Nicenis.Windows;assembly=Nicenis">
    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3" />
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9" />


    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA" />
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA" />
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA" />

    <!--  列表总模板  -->

    <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd"
                            Padding="0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Template="{DynamicResource ScrollViewerControlTemplate1}"
                                      CanContentScroll="False"
                                      Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>



                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--  列表每一项模板  -->

    <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>



                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>


                        </MultiTrigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>-->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedActive.Background}" />

                        </MultiTrigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <!--<Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  列表数据模板  -->
    <DataTemplate x:Key="DataTemplate1" DataType="{x:Type CheckBox}">
        <DataTemplate.Resources>
            <Storyboard x:Key="Storyboard1">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Gd1">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}" />
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Gd1">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Storyboard2" />
        </DataTemplate.Resources>



        <CheckBox Style="{DynamicResource CheckBoxStyle1}" Name="cb1">
            <CheckBox.Resources>
                <Style TargetType="{x:Type CheckBox}">
                    <Style.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Height" Value="125" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </CheckBox.Resources>

            <Grid>

                <Grid.RowDefinitions>
                    <RowDefinition x:Name="Grd" Height="auto" />
                    <RowDefinition x:Name="Grd1" />
                </Grid.RowDefinitions>

                <Border x:Name="Gb1" Grid.Row="0"
                        Grid.RowSpan="1" Height="123.187"
                        Padding="10,0,10,0"
                        VerticalAlignment="Center" Opacity="1"
                        AllowDrop="True" Background="#065684"
                        BorderThickness="5" BorderBrush="Black"
                        CornerRadius="20"
                        RenderTransformOrigin="0.5,0.5"
                        Visibility="{Binding List_Show}">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </TransformGroup>
                    </Border.RenderTransform>


                    <Border.Effect>
                        <DropShadowEffect BlurRadius="5" ShadowDepth="0"
                                          Opacity="5" Color="Black" />
                    </Border.Effect>
                    <Grid Name="Gd2" Margin="0"
                          VerticalAlignment="Center" Opacity="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="165" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>


                        <TextBlock Grid.Column="0"
                                   Text="{Binding Photo_ico}"
                                   Margin="13" HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontFamily="/Resources/#iconfont"
                                   FontSize="80" />
                        <Border Grid.Column="1"
                                Width="5" VerticalAlignment="Stretch"
                                Background="Black" />
                        <TextBlock Grid.Column="2"
                                   Text="{Binding Model_Number}"
                                   Margin="8" HorizontalAlignment="Stretch"
                                   VerticalAlignment="Center"
                                   FontFamily="DengXian" FontSize="40"
                                   Foreground="#E3E3E3" />
                    </Grid>
                </Border>

                <Grid x:Name="Gd3" Grid.Row="1"
                      Height="0" Panel.ZIndex="-1"
                      RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform Y="0" />
                        </TransformGroup>
                    </Grid.RenderTransform>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height=" 1.6*" />
                        <RowDefinition />
                    </Grid.RowDefinitions>





                    <Border x:Name="border" Grid.Row="0" Grid.Column="0"
                            Grid.ColumnSpan="2" Background="#e2e2e2">

                        <TextBlock Text="需要放置加工区域"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" FontSize="20" />
                    </Border>

                    <Button Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="0"
                            Content="1号工位" FontSize="20"
                            Background="#a0a0a0">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="0 0 0 20" />
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Style="{DynamicResource ButtonStyle1}" Grid.Row="1" Grid.Column="1"
                            Content="2号工位" FontSize="20"
                            Background="Green">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="0 0 20 0" />
                            </Style>
                        </Button.Resources>
                    </Button>




                </Grid>


            </Grid>




        </CheckBox>
        <DataTemplate.Triggers>
            <Trigger SourceName="cb1" Property="IsPressed" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation SpeedRatio="1"
                                             Storyboard.TargetProperty="Height"
                                             Storyboard.TargetName="Gd3" To="120"
                                             Duration="0:0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>

                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation SpeedRatio="1"
                                             Storyboard.TargetProperty="Height"
                                             Storyboard.TargetName="Gd3" To="0"
                                             Duration="0:0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>





        </DataTemplate.Triggers>

    </DataTemplate>
</ResourceDictionary>