;======================
;For this "MyTech.kfd" you have to modify the file "smartHmi.User.config" (C:\KRC\User).
;An Example how to do this see prepared node in "SmartHMI.User.Config-Nodes.xml"
;======================

DEFTP Surround={ SOt FALSE,Soc TRUE }


  

  Decl PARAM LSR_MAX_PWR = {SHORTNAME[] "Maximum Power", VALUE {NUMBER:MIN 0, MAX 20000, STEP 100, AUTOLIMIT TRUE, DEFAULT 1000,VISIBLE FALSE}, UNIT[] "W", SHORTCUT[]  "MAXP" }
  Decl PARAM LSR_MIN_PWR = {SHORTNAME[] "Minimum Power",  VALUE {NUMBER:MIN 0, MAX 20000, STEP 100 , AUTOLIMIT TRUE, DEFAULT 2000,VISIBLE FALSE}, UNIT[] "W", SHORTCUT[]  "MINP" }
  Decl PARAM LSR_PRG = {SHORTNAME[] "Laser Program",  VALUE {NUMBER:MIN 1, MAX 79,STEP 1, AUTOLIMIT TRUE, DEFAULT 1,VISIBLE FALSE}, SHORTCUT[] "PRG"}
  Decl PARAM SNSR_PRG = {SHORTNAME[]  "Sensor Program", VALUE {NUMBER:MIN 0, MAX 3,STEP 1, AUTOLIMIT TRUE, DEFAULT 1}, SHORTCUT[] "PREC"}
  Decl PARAM SnSR_State = {SHORTNAME[] "Piercing Time",  VALUE {NUMBER:MIN 0, MAX 5000, STEP 100 , AUTOLIMIT TRUE, DEFAULT 0}, UNIT[] "ms", SHORTCUT[]  "LSR" }  
  Decl PARAM GAS_PRESSURE = {SHORTNAME[] "Cutting Gas",  VALUE {NUMBER:MIN 0, MAX 8, STEP 1 , AUTOLIMIT TRUE, DEFAULT 2}, UNIT[] "bar", SHORTCUT[]  "GAS" }
  Decl PARAM LSR_Dly = {SHORTNAME[] "Piercing Time",  VALUE {NUMBER:MIN 0, MAX 5000, STEP 100 , AUTOLIMIT TRUE, DEFAULT 0}, UNIT[] "ms", SHORTCUT[]  "LSR" }
  Decl PARAM GAS_PRE_FLOW = {SHORTNAME[] "PRE Flow Time",  VALUE {NUMBER:MIN 0, MAX 5000, STEP 100 , AUTOLIMIT TRUE, DEFAULT 0}, UNIT[] "ms", SHORTCUT[]  "PRE" }
  Decl PARAM GAS_POST_FLOW = {SHORTNAME[] "POST Flow Time",  VALUE {NUMBER:MIN 0, MAX 5000, STEP 100 , AUTOLIMIT TRUE, DEFAULT 0}, UNIT[] "ms", SHORTCUT[]  "POST" }
  
  
  Decl PARAM TestBool = {SHORTNAME[] "Laser",  VALUE {BOOL: DEFAULT TRUE , TRUE[] "EIN", FALSE[] "AUS"},  SHORTCUT[]  "LS3" }	


  Decl PARAM ParamList={SHORTNAME[] "Var:",VALUE {Name: DEFAULT[] "V0"}}

  Decl PARAM PL_LsrTool = {SHORTNAME[] "PLTOOL", VAR[] "LSC_TOOL_TYP", SHORTCUT[] "LT", UNIT[] "TOOL" ,Value {FREE: DEFAULT[] "_"}}
  

  
  DECL PLIST LsrTool[9] -> ParamList
  LsrTool[1]  =  LSR_MAX_PWR 
  LsrTool[2]  =  LSR_MIN_PWR  
  LsrTool[3]  =  LSR_PRG 
  LsrTool[4]  =  SNSR_PRG 
  LsrTool[5]  =  SnSR_State  
  LsrTool[6]  =  GAS_PRESSURE
  LsrTool[7]  =  LSR_Dly
  LsrTool[8]  =  GAS_PRE_FLOW 
  LsrTool[9]  =  GAS_POST_FLOW 


  DECL FOLD MyFold[1] 
     MyFold[1]= "/;test"
  
  DECL FOLD PFold[1] 
     PFold[1]= "/; LT%ParamList"
     
     
  DECL FOLD SPL_FOLD[1]
     SPL_Fold[1]= "/;Spline Fold"



;-----------------START-----------------------

 DECL PARAM Write_lIST = {SHORTNAME[] "Write: ",, VALUE {LIST: ITEM[1] {ITEM: VALUE[] "TRUE", DISP[] "TRUE"}, ITEM[2] {ITEM: VALUE[] "FALSE",DISP[] "FALSE"},POS 2}}




 DECL FOLD Write_State_Fold[1] 
           Write_State_Fold[1]= "Surround_Welding_Size.Write_Status=%Write_lIST"


  DEFSCRIPT Write_State_SAVE
  
     SETVAR(FULLPATH[] "Surround_Welding_Size.Write_Status", VALUE[] "%Write_lIST")
     ;REDECL (PATH[] "Surround_Welding_Size.Write_Status",DECLARATION[] "DECL BOOL  A = %Write_lIST ")
      MESSAGE "SAVE! %Write_lIST "
  ENDSCRIPT



  DEFSCRIPT Write_State_READ
     SHOWVAR(FULLPATH[] "Surround_Welding_Size.Write_Status", PARAM Write_lIST)
	 
     ;SETVAR(FULLPATH[] "Surround_Welding_Size.Write_Status", VALUE[] "%Write_lIST")
     ;REDECL (PATH[] "Surround_Welding_Size.Write_Status",DECLARATION[] "DECL BOOL  A = %Write_lIST ")
      MESSAGE "OPEN! %Write_lIST "
	  ;DO Write_State_SAVE
  ENDSCRIPT





;-----------------START-----------------------


;----------------------CROSS POS-------------------

  DECL PARAM POS_1_Name = {SHORTNAME[] "L1_NAME :", UNIT[] "" , VALUE {NAME: DEFAULT[] "P1"}}
  DECL PARAM POS_2_Name = {SHORTNAME[] "", UNIT[] "" , VALUE {NAME: DEFAULT[] "P2"}}

  DECL PARAM POS_3_Name = {SHORTNAME[] "L2_NAME :", UNIT[] "" , VALUE {NAME: DEFAULT[] "P3"}}
  DECL PARAM POS_4_Name = {SHORTNAME[] "", UNIT[] "" , VALUE {NAME: DEFAULT[] "P4"}}



  DECL PARAM Robot_Dir_lIST={shortname[] "Direction:[", unit[] "]", value { LIST : POS 1, _
       ITEM[1] {ITEM:VALUE[] "#A0",     disp[] "0"}, _
       ITEM[2] {ITEM:VALUE[] "#A90",   disp[] "90"}, _
       ITEM[3] {ITEM:VALUE[] "#A270",    disp[] "270"}}}
  

     
   DECL FOLD Cross_Fold[3] 
             Cross_Fold[1]= "  "
             Cross_Fold[2]= "HanGao_Base_Calculate( X%POS_1_Name , X%POS_2_Name , X%POS_3_Name , X%POS_4_Name , %BASE_NO , %Robot_Dir_lIST  )"
             Cross_Fold[3]= "  "











;----------------------CROSS POS-------------------


;-----------------LIN_DECL------------------------

 

  DECL PARAM Area_LIN_lIST = {SHORTNAME[] "Area: ",, VALUE {LIST: _
   ITEM[1] {ITEM: VALUE[] "L0"   , DISP[] "LO"},   _
   ITEM[2] {ITEM: VALUE[] "L90"  , DISP[] "L90"},  _
   ITEM[3] {ITEM: VALUE[] "L180" , DISP[] "L180"}, _
   ITEM[4] {ITEM: VALUE[] "L270"  , DISP[] "L270"}, _
   POS 1}}

 DECL PARAM OFFSET_NO={shortname[] "OFFSET_NO:[", unit[] "]", value { LIST : POS 1, _
  ITEM[1] {ITEM:VALUE[] "1",   disp[] "1"}, _
  ITEM[2] {ITEM:VALUE[] "2",   disp[] "2"}, _
  ITEM[3] {ITEM:VALUE[] "3",   disp[] "3"}, _
  ITEM[4] {ITEM:VALUE[] "4",   disp[] "4"}, _
  ITEM[5] {ITEM:VALUE[] "5",   disp[] "5"}, _
  ITEM[6] {ITEM:VALUE[] "6",   disp[] "6"}, _
  ITEM[7] {ITEM:VALUE[] "7",   disp[] "7"}, _
  ITEM[8] {ITEM:VALUE[] "8",   disp[] "8"}, _
  ITEM[9] {ITEM:VALUE[] "9",   disp[] "9"}, _
  ITEM[10] {ITEM:VALUE[] "10", disp[] "10"}}}
  
DECL PARAM TOOL_NO={shortname[] "Tool:", shortcut[] "", unit[] "", value { LIST : POS 1, _
  ITEM[1] {ITEM:VALUE[] "0", disp[] "NULLFRAME"}, _
  ITEM[2] {ITEM:VALUE[] "1", disp[] "TOOL:1"}, _
  ITEM[3] {ITEM:VALUE[] "2", disp[] "TOOL:2"}, _
  ITEM[4] {ITEM:VALUE[] "3", disp[] "TOOL:3"}, _
  ITEM[5] {ITEM:VALUE[] "4", disp[] "TOOL:4"}, _
  ITEM[6] {ITEM:VALUE[] "5", disp[] "TOOL:5"}, _
  ITEM[7] {ITEM:VALUE[] "6", disp[] "TOOL:6"}, _
  ITEM[8] {ITEM:VALUE[] "7", disp[] "TOOL:7"}, _
  ITEM[9] {ITEM:VALUE[] "8", disp[] "TOOL:8"}, _
  ITEM[10] {ITEM:VALUE[] "9", disp[] "TOOL:9"}, _
  ITEM[11] {ITEM:VALUE[] "10", disp[] "TOOL:10"}, _
  ITEM[12] {ITEM:VALUE[] "11", disp[] "TOOL:11"}, _
  ITEM[13] {ITEM:VALUE[] "12", disp[] "TOOL:12"}, _
  ITEM[14] {ITEM:VALUE[] "13", disp[] "TOOL:13"}, _
  ITEM[15] {ITEM:VALUE[] "14", disp[] "TOOL:14"}, _
  ITEM[16] {ITEM:VALUE[] "15", disp[] "TOOL:15"}, _
  ITEM[17] {ITEM:VALUE[] "16", disp[] "TOOL:16"}, _
  ITEM[18] {ITEM:VALUE[] "17", disp[] "TOOL:17"}, _
  ITEM[19] {ITEM:VALUE[] "18", disp[] "TOOL:18"}, _
  ITEM[20] {ITEM:VALUE[] "19", disp[] "TOOL:19"}, _
  ITEM[21] {ITEM:VALUE[] "20", disp[] "TOOL:20"}, _
  ITEM[22] {ITEM:VALUE[] "21", disp[] "TOOL:21"}, _
  ITEM[23] {ITEM:VALUE[] "22", disp[] "TOOL:22"}, _
  ITEM[24] {ITEM:VALUE[] "23", disp[] "TOOL:23"}, _
  ITEM[25] {ITEM:VALUE[] "24", disp[] "TOOL:24"}, _
  ITEM[26] {ITEM:VALUE[] "25", disp[] "TOOL:25"}, _
  ITEM[27] {ITEM:VALUE[] "26", disp[] "TOOL:26"}, _
  ITEM[28] {ITEM:VALUE[] "27", disp[] "TOOL:27"}, _
  ITEM[29] {ITEM:VALUE[] "28", disp[] "TOOL:28"}, _
  ITEM[30] {ITEM:VALUE[] "29", disp[] "TOOL:29"}, _
  ITEM[31] {ITEM:VALUE[] "30", disp[] "TOOL:30"}, _
  ITEM[32] {ITEM:VALUE[] "31", disp[] "TOOL:31"}, _
  ITEM[33] {ITEM:VALUE[] "32", disp[] "TOOL:32"}}}  
  
DECL PARAM BASE_NO={shortname[] "Base:", shortcut[] "", unit[] "", value { LIST : POS 1, _
  ITEM[1] {ITEM:VALUE[] "0", disp[] "NULLFRAME"}, _
  ITEM[2] {ITEM:VALUE[] "1", disp[] "BASE:1"}, _
  ITEM[3] {ITEM:VALUE[] "2", disp[] "BASE:2"}, _
  ITEM[4] {ITEM:VALUE[] "3", disp[] "BASE:3"}, _
  ITEM[5] {ITEM:VALUE[] "4", disp[] "BASE:4"}, _
  ITEM[6] {ITEM:VALUE[] "5", disp[] "BASE:5"}, _
  ITEM[7] {ITEM:VALUE[] "6", disp[] "BASE:6"}, _
  ITEM[8] {ITEM:VALUE[] "7", disp[] "BASE:7"}, _
  ITEM[9] {ITEM:VALUE[] "8", disp[] "BASE:8"}, _
  ITEM[10] {ITEM:VALUE[] "9", disp[] "BASE:9"}, _
  ITEM[11] {ITEM:VALUE[] "10", disp[] "BASE:10"}, _
  ITEM[12] {ITEM:VALUE[] "11", disp[] "BASE:11"}, _
  ITEM[13] {ITEM:VALUE[] "12", disp[] "BASE:12"}, _
  ITEM[14] {ITEM:VALUE[] "13", disp[] "BASE:13"}, _
  ITEM[15] {ITEM:VALUE[] "14", disp[] "BASE:14"}, _
  ITEM[16] {ITEM:VALUE[] "15", disp[] "BASE:15"}, _
  ITEM[17] {ITEM:VALUE[] "16", disp[] "BASE:16"}, _
  ITEM[18] {ITEM:VALUE[] "17", disp[] "BASE:17"}, _
  ITEM[19] {ITEM:VALUE[] "18", disp[] "BBASE:18"}, _
  ITEM[20] {ITEM:VALUE[] "19", disp[] "BASE:19"}, _
  ITEM[21] {ITEM:VALUE[] "20", disp[] "BASE:20"}, _
  ITEM[22] {ITEM:VALUE[] "21", disp[] "BASE:21"}, _
  ITEM[23] {ITEM:VALUE[] "22", disp[] "BASE:22"}, _
  ITEM[24] {ITEM:VALUE[] "23", disp[] "BASE:23"}, _
  ITEM[25] {ITEM:VALUE[] "24", disp[] "BASE:24"}, _
  ITEM[26] {ITEM:VALUE[] "25", disp[] "BASE:25"}, _
  ITEM[27] {ITEM:VALUE[] "26", disp[] "BASE:26"}, _
  ITEM[28] {ITEM:VALUE[] "27", disp[] "BASE:27"}, _
  ITEM[29] {ITEM:VALUE[] "28", disp[] "BASE:28"}, _
  ITEM[30] {ITEM:VALUE[] "29", disp[] "BASE:29"}, _
  ITEM[31] {ITEM:VALUE[] "30", disp[] "BASE:30"}, _
  ITEM[32] {ITEM:VALUE[] "31", disp[] "BASE:31"}, _
  ITEM[33] {ITEM:VALUE[] "32", disp[] "BASE:32"}}}

 
  DECL PARAM Vel = {SHORTNAME[] "Vel=", UNIT[] "m/s", VALUE {REAL: MIN 0, MAX 3000, STEP 0.1, DEFAULT 0.02}}

  DECL PARAM PosAct={VALUE {FREE: DEFAULT[] ""}}
  
  DECL PARAM Pos_X={SHORTNAME[] "X:", UNIT[] "MM" , VALUE {REAL: MIN -3000, MAX 3000, STEP 0.1, DEFAULT 0}}
  DECL PARAM Pos_Y={SHORTNAME[] "Y:", UNIT[] "MM" , VALUE {REAL: MIN -3000, MAX 3000, STEP 0.1, DEFAULT 0}}
  DECL PARAM Pos_Z={SHORTNAME[] "Z:", UNIT[] "MM" , VALUE {REAL: MIN -3000, MAX 3000, STEP 0.1, DEFAULT 0}}
  DECL PARAM Pos_A={SHORTNAME[] "A:", UNIT[] "MM" , VALUE {REAL: MIN -360, MAX 360, STEP 0.1, DEFAULT 0}}
  DECL PARAM Pos_B={SHORTNAME[] "B:", UNIT[] "MM" , VALUE {REAL: MIN -360, MAX 360, STEP 0.1, DEFAULT 0}}
  DECL PARAM Pos_C={SHORTNAME[] "C:", UNIT[] "MM" , VALUE {REAL: MIN -360, MAX 360, STEP 0.1, DEFAULT 0}}
  
  Decl PARAM ACC =  {SHORTNAME[] "Acc" ,  VALUE {NUMBER:MIN 1, MAX 100, STEP 1, AUTOLIMIT TRUE, DEFAULT 100}, UNIT[] "%", SHORTCUT[] "Acc" }
  Decl PARAM CDIS = {SHORTNAME[] "Cont" , VALUE {NUMBER:MIN 0, MAX 1000, STEP 1, AUTOLIMIT TRUE, DEFAULT 10}, UNIT[] "mm", SHORTCUT[] "Cont" }
  
  
  DECL PARAM Offset_X = {SHORTNAME[] "Offset.X=", UNIT[] "MM", VALUE {REAL: MIN -100, MAX 100, STEP 0.1, DEFAULT 0}}
  DECL PARAM Offset_Y = {SHORTNAME[] "Offset.Y=", UNIT[] "MM", VALUE {REAL: MIN -100, MAX 100, STEP 0.1, DEFAULT 0}}
  DECL PARAM Offset_Z = {SHORTNAME[] "Offset.Z=", UNIT[] "MM", VALUE {REAL: MIN -100, MAX 100, STEP 0.1, DEFAULT 0}}


  Decl PARAM PL_TB_DAT = {SHORTNAME[] "Lin Parametet Settings", VAR[] "FDAT", SHORTCUT[] "F", UNIT[] "", Value {FREE: DEFAULT[] "_"}}
  Decl PARAM PL_LDat = {SHORTNAME[] "Lin Parameter", VAR[] "LDAT", SHORTCUT[] "L", UNIT[] "" ,Value {FREE: DEFAULT[] "_"}}
  Decl PARAM PL_MOVE_LIN = {SHORTNAME[] "Move POS", VAR[] "E6POS", SHORTCUT[] "PO", UNIT[] "" ,Value {FREE: DEFAULT[] "_"}}
  Decl PARAM PL_Offset = {SHORTNAME[] "Offset_TOOL", VAR[] "Offset_POS", SHORTCUT[] "FF", UNIT[] "POS" ,Value {FREE: DEFAULT[] "_"}}
  
  
  Decl PARAM MOVE_Name = {SHORTNAME[] "Point:", UNIT[] "" , Value {NAME: DEFAULT[] "S1"}}
  DECL PLIST MOVE_LIN[6] -> MOVE_Name
             MOVE_LIN[1] = Pos_X
             MOVE_LIN[2] = Pos_A
             MOVE_LIN[3] = Pos_Y
             MOVE_LIN[4] = Pos_B
             MOVE_LIN[5] = Pos_Z
             MOVE_LIN[6] = Pos_C

  
  
  DECL PARAM MOVE_DAT = {SHORTNAME[] "T|B:", UNIT[] "" , VALUE {NAME: DEFAULT[] "S1"}}
  DECL PLIST TB_DAT[4] -> MOVE_DAT
   TB_DAT[1] = TOOL_NO
   TB_DAT[2] = BASE_NO
   TB_DAT[3] = ACC
   TB_DAT[4] = CDIS
       
             
  
  
  
  
  
  Decl PARAM Offset_List={SHORTNAME[] "Offset:" , VALUE {Name: DEFAULT[] "S1"}}
  DECL PLIST Offset[3]  -> Offset_List
             Offset[1]  =  Offset_X 
             Offset[2]  =  Offset_Y 
             Offset[3]  =  Offset_Z 



  Decl PARAM LIN_Position = {SHORTNAME[] "Point: ", VALUE {NUMBER:MIN 5, MAX 95, STEP 1, AUTOLIMIT TRUE, DEFAULT 50,VISIBLE FALSE}, UNIT[] " % " , SHORTCUT[]  " % " }

 
   DECL FOLD LIN_FOLD[7] 
             LIN_FOLD[1]= "/; X=%Pos_X , Y=%Pos_Y , Z=%Pos_Z , A=%Pos_A , B=%Pos_B , C=%Pos_C"
             LIN_FOLD[2]= "HanGao_Surr_Calculate( %LIN_Position , #%Area_LIN_lIST , #L_LIN_POS , PO%MOVE_Name , , , FF%Offset_List  , , %OFFSET_NO , %Vel  )"
             LIN_FOLD[3]= " "
             LIN_FOLD[4]= "FDAT_ACT=F%MOVE_DAT"
             LIN_FOLD[5]= "LDAT_ACT=L%MOVE_DAT"
             LIN_FOLD[6]= "BAS(#CP_PARAMS,%Area_LIN_lIST _Welding_Craft[%OFFSET_NO ].Welding_Speed )"
             LIN_FOLD[7]= "LIN PO%MOVE_Name  C_DIS C_DIS"

      
             
             
             
             
;-----------------LIN_DECL------------------------






;------------------CIR_DECL-----------------------




  DECL PARAM CIR_Pos_X={SHORTNAME[] "X:", UNIT[] "MM" , VALUE {REAL: MIN -3000, MAX 3000, STEP 0.1, DEFAULT 0}}
  DECL PARAM CIR_Pos_Y={SHORTNAME[] "Y:", UNIT[] "MM" , VALUE {REAL: MIN -3000, MAX 3000, STEP 0.1, DEFAULT 0}}
  DECL PARAM CIR_Pos_Z={SHORTNAME[] "Z:", UNIT[] "MM" , VALUE {REAL: MIN -3000, MAX 3000, STEP 0.1, DEFAULT 0}}
  DECL PARAM CIR_Pos_A={SHORTNAME[] "A:", UNIT[] "MM" , VALUE {REAL: MIN -360, MAX 360, STEP 0.1, DEFAULT 0}}
  DECL PARAM CIR_Pos_B={SHORTNAME[] "B:", UNIT[] "MM" , VALUE {REAL: MIN -360, MAX 360, STEP 0.1, DEFAULT 0}}
  DECL PARAM CIR_Pos_C={SHORTNAME[] "C:", UNIT[] "MM" , VALUE {REAL: MIN -360, MAX 360, STEP 0.1, DEFAULT 0}}



  DECL PARAM Offset_CIR_X = {SHORTNAME[] "Offset.X=", UNIT[] "MM", VALUE {REAL: MIN -3000, MAX 3000, STEP 0.1, DEFAULT 0}}
  DECL PARAM Offset_CIR_Y = {SHORTNAME[] "Offset.Y=", UNIT[] "MM", VALUE {REAL: MIN -3000, MAX 3000, STEP 0.1, DEFAULT 0}}
  DECL PARAM Offset_CIR_Z = {SHORTNAME[] "Offset.Z=", UNIT[] "MM", VALUE {REAL: MIN -3000, MAX 3000, STEP 0.1, DEFAULT 0}}

  Decl PARAM PL_Offset_CIR = {SHORTNAME[] "Offset_TOOL", VAR[] "Offset_POS", SHORTCUT[] "FF", UNIT[] "POS" ,Value {FREE: DEFAULT[] "_"}}
  Decl PARAM Offset_CIR_List={SHORTNAME[] "" , VALUE {Name: DEFAULT[] "SE1"}}

  DECL PLIST Offset_CIR[3] -> Offset_CIR_List
             Offset_CIR[1]  =  Offset_CIR_X 
             Offset_CIR[2]  =  Offset_CIR_Y  
             Offset_CIR[3]  =  Offset_CIR_Z 

  Decl PARAM PL_CIR_END = {SHORTNAME[] "Move POS", VAR[] "E6POS", SHORTCUT[] "PO", UNIT[] "" ,Value {FREE: DEFAULT[] "_"}}
  
  Decl PARAM CIR_End_Name = {SHORTNAME[] "", UNIT[] "" , Value {NAME: DEFAULT[] "SM1"}}
  DECL PLIST CIR_END[6] -> CIR_End_Name
             CIR_END[1] = CIR_Pos_X
             CIR_END[2] = CIR_Pos_A
             CIR_END[3] = CIR_Pos_Y
             CIR_END[4] = CIR_Pos_B
             CIR_END[5] = CIR_Pos_Z
             CIR_END[6] = CIR_Pos_C
             
			 
		 
			 
  DECL PARAM Area_CIR_lIST = {SHORTNAME[] "Area: " , VALUE {LIST: _
   ITEM[1] {ITEM: VALUE[] "C45"   , DISP[] "C45"},   _
   ITEM[2] {ITEM: VALUE[] "C135"  , DISP[] "C135"},  _
   ITEM[3] {ITEM: VALUE[] "C225" ,  DISP[] "C225"},  _
   ITEM[4] {ITEM: VALUE[] "C315"  , DISP[] "C315"},  _
   POS 1}}

   
  DECL PARAM CIR_Type_lIST = {SHORTNAME[] "CIR_Type: " , VALUE {LIST: _
   ITEM[1] {ITEM: VALUE[] "#LIN_POS"   , DISP[] "LIN_POS"},  _
   ITEM[2] {ITEM: VALUE[] "#CIR_POS"  ,  DISP[] "CIR_POS"},  _
   POS 1}}


   DECL FOLD CIR_L_FOLD[7] 
             CIR_L_FOLD[1]= "/; X=%Pos_X , Y=%Pos_Y , Z=%Pos_Z , A=%Pos_A , B=%Pos_B , C=%Pos_C"
             CIR_L_FOLD[2]= "HanGao_Surr_Calculate(  , #%Area_CIR_lIST , #C_LIN_POS , PO%MOVE_Name , , , FF%Offset_List  , ,  , %Vel )"
             CIR_L_FOLD[3]= " "
             CIR_L_FOLD[4]= "FDAT_ACT=F%MOVE_DAT"
             CIR_L_FOLD[5]= "LDAT_ACT=L%MOVE_DAT"
             CIR_L_FOLD[6]= "BAS(#CP_PARAMS, %Area_CIR_lIST _Welding_Craft[1].Welding_Speed )"
             CIR_L_FOLD[7]= "LIN PO%MOVE_Name  C_DIS C_DIS"

             
   DECL FOLD Cir_FOLD[8] 
             Cir_FOLD[1]= "/; %MOVE_Name  : X=%Pos_X , Y=%Pos_Y , Z=%Pos_Z , A=%Pos_A , B=%Pos_B , C=%Pos_C"
			 Cir_FOLD[2]= "/; %CIR_End_Name  : X=%CIR_Pos_X , Y=%CIR_Pos_Y , Z=%CIR_Pos_Z , A=%CIR_Pos_A , B=%CIR_Pos_B , C=%CIR_Pos_C"
             Cir_FOLD[3]= "HanGao_Surr_Calculate(  , #%Area_CIR_lIST , #C_CIR_POS ,  , PO%MOVE_Name , PO%CIR_End_Name  , FF%Offset_CIR_List  ,FF%Offset_CIR_List  ,  , %Vel )"
             Cir_FOLD[4]= " "
             Cir_FOLD[5]= "FDAT_ACT=F%CIR_End_Name"
             Cir_FOLD[6]= "LDAT_ACT=L%CIR_End_Name"
             Cir_FOLD[7]= "BAS(#CP_PARAMS,%Area_CIR_lIST _Welding_Craft[2].Welding_Speed )"
             Cir_FOLD[8]= "CIRC PO%MOVE_Name , PO%CIR_End_Name  C_DIS C_DIS"
			 
             
             

	
	
  
;--------------------USER_Program------------------------------







;------------------CIR_DECL-----------------------




;--------------------LIn_Program------------------------------








  DEFSCRIPT LIN_New


  ENDSCRIPT


  DEFSCRIPT LIN_Write
     
    MESSAGE "Write Stat"
	
	
    SETVAR(FULLPATH[] "%Area_LIN_lIST _Welding_Craft[%OFFSET_NO ].Welding_Offset.X", VALUE[] "FF%Offset_List .X")
	SETVAR(FULLPATH[] "%Area_LIN_lIST _Welding_Craft[%OFFSET_NO ].Welding_Offset.Y", VALUE[] "FF%Offset_List .Y")
	SETVAR(FULLPATH[] "%Area_LIN_lIST _Welding_Craft[%OFFSET_NO ].Welding_Offset.Z", VALUE[] "FF%Offset_List .Z")
	SETVAR(FULLPATH[] "%Area_LIN_lIST _Welding_Craft[%OFFSET_NO ].Welding_Speed", VALUE[] " %Vel ")

    REDECL(PATH[] "%MODULE ", DECLARATION[] "DECL Offset_POS FF%Offset_List ={X %Offset_X ,Y %Offset_Y ,Z %Offset_Z }")
	MESSAGE " %Offset_List  Offset: X=%Offset_X  ,Y=%Offset_Y  ,Z=%Offset_Z "
  ENDSCRIPT

  DEFSCRIPT LIN_Read
     
    MESSAGE "Read Stat"
    SHOWVAR (FULLPATH[] "%Area_LIN_lIST _Welding_Craft[%OFFSET_NO ].Welding_Offset.X" , PARAM Offset_X)
    SHOWVAR (FULLPATH[] "%Area_LIN_lIST _Welding_Craft[%OFFSET_NO ].Welding_Offset.Y" , PARAM Offset_Y)
    SHOWVAR (FULLPATH[] "%Area_LIN_lIST _Welding_Craft[%OFFSET_NO ].Welding_Offset.Z" , PARAM Offset_Z)
    SHOWVAR (FULLPATH[] "%Area_LIN_lIST _Welding_Craft[%OFFSET_NO ].Welding_Speed" , PARAM Vel)


	MESSAGE " %Offset_List  Offset: X=%Offset_X  ,Y=%Offset_Y  ,Z=%Offset_Z "
  ENDSCRIPT

     DEFSCRIPT LIN_Refresh
 
    
	
    SHOWVAR (FULLPATH[] "PO%MOVE_Name .X",  PARAM Pos_X)
    SHOWVAR (FULLPATH[] "PO%MOVE_Name .Y" , PARAM Pos_Y)
    SHOWVAR (FULLPATH[] "PO%MOVE_Name .Z" , PARAM Pos_Z)
    SHOWVAR (FULLPATH[] "PO%MOVE_Name .A" , PARAM Pos_A)
    SHOWVAR (FULLPATH[] "PO%MOVE_Name .B" , PARAM Pos_B)
    SHOWVAR (FULLPATH[] "PO%MOVE_Name .C" , PARAM Pos_C)
    
	MESSAGE " %MOVE_Name  Position: X=%Pos_X  , Y=%Pos_Y  , Z=%Pos_Z , A=%Pos_A , B=%Pos_B , C=%Pos_C "
	  
	  SWITCH "Surround_Welding_Size.Write_Status"
      CASE "TRUE" DO  LIN_Write
      CASE "FALSE" DO LIN_Read
      ENDSWITCH
	
	
	
    
    
   ENDSCRIPT
  
  DEFSCRIPT LIN_SAVE
    
    

	SETVAR(FULLPATH[] "%Area_LIN_lIST _Welding_Craft[%OFFSET_NO ].Welding_Name[]", VALUE[] "/"%MOVE_Name /"" )
    REDECL(PATH[] "%MODULE ", DECLARATION[] "DECL FDAT F%MOVE_DAT ={TOOL_NO %TOOL_NO ,BASE_NO %BASE_NO ,IPO_FRAME #BASE ,POINT2[] /" /",TQ_STATE FALSE }" )
    REDECL(PATH[] "%MODULE ", DECLARATION[] "DECL LDAT L%MOVE_DAT ={VEL %Vel ,ACC %ACC ,APO_DIST %CDIS ,APO_FAC 50.0000 ,AXIS_VEL 100.0,AXIS_ACC 100.0,ORI_TYP #VAR ,CIRC_TYP #BASE,JERK_FAC 50.0,GEAR_JERK 50.0,EXAX_IGN 0}" )
    REDECL(PATH[] "%MODULE ", DECLARATION[] "DECL Offset_POS FF%Offset_List ={X %Offset_X ,Y %Offset_Y ,Z %Offset_Z }")

	
    MESSAGE " %Area_LIN_lIST  "
    MESSAGE " %MOVE_Name   SAVE "
	
	  SWITCH "Surround_Welding_Size.Write_Status"
      CASE "TRUE" DO  LIN_Write
      CASE "FALSE" DO LIN_Read
      ENDSWITCH
	
  ENDSCRIPT

   
   DEFSCRIPT OnOpen_Lin
      SWITCH "ISCHANGE"
      CASE "TRUE" DO  LIN_Refresh
      CASE "FALSE" DO LIN_New
      ENDSWITCH
      ;DO ACCEPTINLINEFORM
   ENDSCRIPT
   
   
   ;--------------------LIn_Program------------------------------
   
   ;--------------------CIR_Program------------------------------
   
   

   
   
   DEFSCRIPT CIR_E_SAVE

    REDECL (PATH[] "%MODULE ", DECLARATION[] "DECL Offset_POS FF%Offset_List ={X %Offset_X ,Y %Offset_Y ,Z %Offset_Z }")
	REDECL (PATH[] "%MODULE ", DECLARATION[] "DECL Offset_POS FF%Offset_CIR_List ={X %Offset_CIR_X ,Y %Offset_CIR_Y ,Z %Offset_CIR_Z }")
    REDECL (PATH[] "%MODULE ", DECLARATION[] "DECL FDAT F%CIR_End_Name ={TOOL_NO %TOOL_NO ,BASE_NO %BASE_NO ,IPO_FRAME #BASE ,POINT2[] /" /",TQ_STATE FALSE }" )
    REDECL (PATH[] "%MODULE ", DECLARATION[] "DECL LDAT L%CIR_End_Name ={VEL %Vel ,ACC %ACC ,APO_DIST %CDIS ,APO_FAC 50.0000 ,AXIS_VEL 100.0,AXIS_ACC 100.0,ORI_TYP #VAR ,CIRC_TYP #BASE,JERK_FAC 50.0,GEAR_JERK 50.0,EXAX_IGN 0}" )

    MESSAGE "  %MOVE_Name  ,  %CIR_End_Name  SAVE "
    

	
  ENDSCRIPT
   
  DEFSCRIPT CIR_New

    
  ENDSCRIPT
   
   DEFSCRIPT CIR_Refresh

    
    SHOWVAR (FULLPATH[] "PO%CIR_End_Name .X",  PARAM CIR_Pos_X)
    SHOWVAR (FULLPATH[] "PO%CIR_End_Name .Y" , PARAM CIR_Pos_Y)
    SHOWVAR (FULLPATH[] "PO%CIR_End_Name .Z" , PARAM CIR_Pos_Z)
    SHOWVAR (FULLPATH[] "PO%CIR_End_Name .A" , PARAM CIR_Pos_A)
    SHOWVAR (FULLPATH[] "PO%CIR_End_Name .B" , PARAM CIR_Pos_B)
    SHOWVAR (FULLPATH[] "PO%CIR_End_Name .C" , PARAM CIR_Pos_C)
    
    MESSAGE " %CIR_End_Name  CIR End Position: X=%CIR_Pos_X  , Y=%CIR_Pos_Y  , Z=%CIR_Pos_Z , A=%CIR_Pos_A , B=%CIR_Pos_B , C=%CIR_Pos_C"
	MESSAGE " %Offset_CIR_List  CIR End Offset: X=%Offset_CIR_X  ,Y=%Offset_CIR_Y  ,Z=%Offset_CIR_Z "
    DO LIN_Refresh
   ENDSCRIPT
   
   
   
   
   
   
  DEFSCRIPT OnOpen_CIR
      SWITCH "ISCHANGE"
      CASE "TRUE"  DO CIR_Refresh
      CASE "FALSE" DO CIR_New
      ENDSWITCH
      ;DO ACCEPTINLINEFORM
   ENDSCRIPT
   
   
      ;--------------------CIR_Program------------------------------
   
   
   
   
   
;---------------------USER_Program-----------------------------


  DEFSCRIPT LT_SAVE
    ;SETVAR(FULLPATH[] "LT%ParamList .LSR_MAX_PWR", VALUE[] "%LSR_MAX_PWR")
     REDECL (PATH[] "%MODULE ",DECLARATION[] "DECL LSC_TOOL_TYP LT%ParamList ={LSR_MAX_PWR %LSR_MAX_PWR ,LSR_MIN_PWR %LSR_MIN_PWR }")
    ;MESSAGE "SAVE! LT%ParamList .LSR_PRG , %LSR_MAX_PWR ,%LSR_MIN_PWR  "
    

  ENDSCRIPT

  
  
  

   DEFSCRIPT ON_OPEN
    
    ;MESSAGE "Open! %LSR_MAX_PWR"

   ENDSCRIPT
  

   DEFSCRIPT NEW_OPEN
    MESSAGE "new!"
    ;SHOWVAR(FULLPATH[] "LT%ParamList .LSR_MAX_PWR", PARAM LSR_MAX_PWR  )
   ENDSCRIPT



   DEFSCRIPT OnNewOpen
    SWITCH "ISCHANGE"
    CASE "TRUE" DO ON_OPEN
    CASE "FALSE" DO NEW_OPEN
    ENDSWITCH
    ;DO ACCEPTINLINEFORM
   ENDSCRIPT


   Decl InlineForm _START={FOLD[1] Write_State_Fold, PARAM[1] Write_lIST   , ONOPEN Write_State_READ , ONACCEPT Write_State_SAVE } 
   Decl InlineForm _END={FOLD[1] PFold} 

   Decl InlineForm S_LIN={FOLD[1] LIN_FOLD , PARAM[1] MOVE_Name  , PARAM[2] Vel, PARAM[3] LIN_Position, PARAM[4] Area_LIN_lIST, PARAM[5] MOVE_DAT  , PARAM[6] OFFSET_NO , PARAM[7] Offset_List ,ONOPEN OnOpen_Lin ,ONACCEPT LIN_SAVE} 
   
   Decl InlineForm S_C_LIN = {FOLD[1] CIR_L_FOLD ,  PARAM[1] MOVE_Name , PARAM[2] Vel, PARAM[3] Area_CIR_lIST , PARAM[4] MOVE_DAT  , PARAM[5] Offset_List  , ONOPEN OnOpen_Lin , ONACCEPT LIN_SAVE} 
   Decl InlineForm S_C_CIR = {FOLD[1] Cir_FOLD ,  PARAM[1] MOVE_Name , PARAM[2] CIR_End_Name , PARAM[3] Vel , PARAM[4] Area_CIR_lIST , PARAM[5] MOVE_DAT  , PARAM[6] Offset_List , PARAM[7] Offset_CIR_List , ONOPEN OnOpen_CIR , ONACCEPT CIR_E_SAVE}  
   
   Decl InlineForm Cross_Pos={FOLD[1] Cross_Fold , PARAM[1] BASE_NO , PARAM[2] Robot_Dir_lIST  , PARAM[3] POS_1_Name ,PARAM[4] POS_2_Name , PARAM[5] POS_3_Name , PARAM[6] POS_4_Name}
   
  ;Decl InlineForm ILF_With_ParamList={FOLD[1] PFold, PARAM[1] ParamList, PARAM[2] TESTBOOL ,ONACCEPT LT_SAVE , ONOPEN OnNewOpen } 

;The next two lines must be inserted in $Config.dat to use this example!
;
;STRUC LSC_TOOL_TYP INT LSR_MAX_PWR,INT LSR_MIN_PWR,INT LSR_Prg,REAL SNSR_Prg,INT SNSR_State,REAL GAS_Pressure,INT LSR_Dly,INT GAS_Pre_Flow,INT GAS_Post_Flow
;DECL LSC_TOOL_TYP LTDEFAULT={LSR_MAX_PWR 500,LSR_MIN_PWR 50,LSR_Prg 1,SNSR_Prg 1.0,SNSR_State 0,GAS_Pressure 1.0,LSR_Dly 100,GAS_Pre_Flow 0,GAS_Post_Flow 0}  

  ;Decl InlineForm MyCmd={ FOLD[1] MyFold,PARAM[1] ParamList,ONACCEPT CANCELINLINEFORM }  
 
  ;To use the next demo ILF remove the comment sign, function only available in Version 5.5!
  ;Decl InlineForm MySplineCheck={ FOLD[1] MyFold, ILF_TYPE ALL} 
  ;Decl InlineForm MySplineILF={ FOLD[1] SPL_FOLD, SPLINE TRUE}
  
ENDTP



