<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="22.05.0.0">
<procedure name="main">
<interface/>
<body>
<c as_id="calibration" as_name="Calibration 01" as_grp="[1,1]" as_ord="1">* Calibration 01: Code generated by Calibration 01</c>
<c></c>
<c></c>
<l>Name:=315</l>
<c></c>
<l as_id="calibration" as_name="Calibration 01" as_grp="[2,1]" as_ord="1">read_cam_par ('Calib_45.cal', CameraParameters)</l>
<l as_id="calibration" as_name="Calibration 01" as_grp="[2,2]" as_ord="1">read_pose ('Calib_45.dat', CameraPose)</l>
<c></c>
<l>change_radial_distortion_cam_par ('adaptive', CameraParameters, 0, CamParamOut)</l>
<c></c>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,1]" as_ord="1">open_framegrabber ('GigEVision2', 0, 0, 0, 0, 0, 0, 'progressive', -1, 'default', -1, 'false', 'default', 'c42f90f24196_Hikvision_MVCA06010GM', 0, -1, AcqHandle)</l>
<c></c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    grab_image (Image, AcqHandle)</l>
<c>    *校正图像</c>
<l>    *gen_radial_distortion_map (Map, CamParamOut, CamParamOut, 'bilinear')</l>
<l>   * map_image (Image, Map, ImageMapped)</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    median_rect (Image, ImageMedian, 3, 3)</l>
<c>     *优化</c>
<l>    scale_image_max (ImageMedian, ImageScaleMax)</l>
<l>    emphasize (ImageMedian, ImageEmphasize, 37, 37, 10)</l>
<c>  </c>
<c>    </c>
<c>     </c>
<l>    threshold (ImageEmphasize, Regions, 0, 115)</l>
<l>    connection (Regions, ConnectedRegions)</l>
<c>     </c>
<l>     fill_up (ConnectedRegions, RegionFillUp)</l>
<c>    </c>
<c>  *筛选圆区域</c>
<l>     select_shape (RegionFillUp, SelectedRegions, ['area','circularity'], 'and', [70536,0.9], [200520,1])</l>
<c></c>
<c></c>
<c>     </c>
<c>   </c>
<l>      stop()</l>
<c>         </c>
<c></c>
<c></c>
<c></c>
<c>    </c>
<c>     *重1到9排序</c>
<l>     sort_region (SelectedRegions, SortedRegionss, 'character', 'false', 'row')</l>
<c>     *计算中心位置</c>
<l>     area_center (SortedRegionss, Area, Row1, Column1)</l>
<c> </c>
<c>     </c>
<c>     *显示位置</c>
<l>     gen_cross_contour_xld (Cross, Row1, Column1, 500, 0.785398)</l>
<l>     dev_display (ImageMapped)</l>
<l>     dev_display (Cross)</l>
<c>    </c>
<l>    stop()</l>
<l>    Row_rob[0]:=42.42</l>
<l>    Col_rob[0]:=-770.49</l>
<l>     gen_cross_contour_xld (Cross, Row1[0], Column1[0], 500, 0.785398)</l>
<c>    </c>
<l>    Row_rob[1]:=75.89</l>
<l>    Col_rob[1]:=-770.96</l>
<l>     gen_cross_contour_xld (Cross, Row1[1], Column1[1], 500, 0.785398)</l>
<c>    </c>
<l>    Row_rob[2]:=109.58</l>
<l>    Col_rob[2]:=-771.39</l>
<l>     gen_cross_contour_xld (Cross, Row1[2], Column1[2], 500, 0.785398)</l>
<c>    </c>
<l>    Row_rob[3]:=42.04</l>
<l>    Col_rob[3]:=-798.81</l>
<l>     gen_cross_contour_xld (Cross, Row1[3], Column1[3], 500, 0.785398)</l>
<c>    </c>
<l>    Row_rob[4]:=75.44</l>
<l>    Col_rob[4]:=-799.21</l>
<l>     gen_cross_contour_xld (Cross, Row1[4], Column1[4], 500, 0.785398)</l>
<c>    </c>
<l>    Row_rob[5]:=109.24</l>
<l>    Col_rob[5]:=-799.78</l>
<l>     gen_cross_contour_xld (Cross, Row1[5], Column1[5], 500, 0.785398)</l>
<c>    </c>
<l>    Row_rob[6]:=41.54</l>
<l>    Col_rob[6]:=-826.91</l>
<l>     gen_cross_contour_xld (Cross, Row1[6], Column1[6], 500, 0.785398)</l>
<c>    </c>
<l>    Row_rob[7]:=75.10</l>
<l>    Col_rob[7]:=-827.42</l>
<l>     gen_cross_contour_xld (Cross, Row1[7], Column1[7], 500, 0.785398)</l>
<c>    </c>
<l>    Row_rob[8]:=108.85</l>
<l>    Col_rob[8]:=-827.79</l>
<l>     gen_cross_contour_xld (Cross, Row1[8], Column1[8], 500, 0.785398)</l>
<c></c>
<l>    vector_to_hom_mat2d (Row1, Column1, Row_rob, Col_rob, HomMat2D)</l>
<c>    </c>
<l>    ErrorX:=[]</l>
<l>    ErrorY:=[]</l>
<c>    </c>
<l>    for I := 0 to |Row1|-1 by 1</l>
<c>        </c>
<l>         affine_trans_point_2d (HomMat2D, Row1[I], Column1[I], Qx, Qy)</l>
<c>        </c>
<l>         ErrorX:=[ErrorX,Row_rob[I]-Qx]</l>
<l>         ErrorY:=[ErrorY,Col_rob[I]-Qy]</l>
<c>         </c>
<l>    endfor</l>
<c>    </c>
<l>    EX:=deviation(ErrorX)</l>
<l>    EY:=deviation(ErrorY)</l>
<c>    </c>
<l>    stop()</l>
<c>    </c>
<c>    *序列化2d矩阵</c>
<l>    serialize_hom_mat2d (HomMat2D, HomMatID)</l>
<c>    *打开文件写入二进制</c>
<l>    open_file ('2D_'+Name+'_ID.mat', 'output_binary', FileHandle)</l>
<c>    *写入矩阵变量</c>
<l>    fwrite_serialized_item (FileHandle, HomMatID)</l>
<c>    *关闭文件</c>
<l>    close_file (FileHandle)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[4,1]" as_ord="1">close_framegrabber (AcqHandle)</l>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
<procedure name="dev_disp_calibration_plate_results">
<interface>
<ic>
<par name="CalibObjectData" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>ErrorCamCalibInPixel := CalibObjectData.ErrorCamCalibInPixel</l>
<l>Image := CalibObjectData.ImageCaltab</l>
<l>PlaneInCamPose := CalibObjectData.PlaneInCamPose</l>
<c>* </c>
<l>dev_display (Image)</l>
<l>Text := 'Please check whether this pose describes the relation'</l>
<l>Text[1] := 'between your camera and the calibrated plane.'</l>
<l>Text[2] := ''</l>
<l>Text[3] := 'TransX: ' + PlaneInCamPose[0]$' .3f' + ' m'</l>
<l>Text[4] := 'TransY: ' + PlaneInCamPose[1]$' .3f' + ' m'</l>
<l>Text[5] := 'TransZ: ' + PlaneInCamPose[2]$' .3f' + ' m'</l>
<l>Text[6] := 'RotX:   ' + PlaneInCamPose[3]$' .1f' + '°'</l>
<l>Text[7] := 'RotY:   ' + PlaneInCamPose[4]$' .1f' + '°'</l>
<l>Text[8] := 'RotZ:   ' + PlaneInCamPose[5]$' .1f' + '°'</l>
<l>Text[9] := ''</l>
<l>Text[10] := 'RMS of the back projection = ' + ErrorCamCalibInPixel$'.3f' + ' ' + 'pixel'</l>
<l>dev_disp_text (Text, 'window', 'top', 'left', 'black', [], [])</l>
<l>dev_disp_text ('Press Run (F5) to continue', 'window', 'bottom', 'right', 'black', [], [])</l>
<l>return ()</l>
</body>
<docu id="dev_disp_calibration_plate_results">
<chapters lang="en_US">
<item>Graphics</item>
<item>Text</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="CalibObjectData">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>dict</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="dev_disp_calibration_instruction">
<interface>
<io>
<par name="Image" base_type="iconic" dimension="0"/>
</io>
<ic>
<par name="WindowHandle" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="WindowHandleGraphic" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* </c>
<l>read_image (ImageApproachFinderPattern, '3d_machine_vision/hand_eye/instruction_images/approach_finder_pattern')</l>
<l>get_window_extents (WindowHandle, Row, Column, Width, Height)</l>
<l>dev_open_window_fit_image (ImageApproachFinderPattern, 0, Width + 8, 600, -1, WindowHandleGraphic)</l>
<l>set_part_style (WindowHandleGraphic, 2)</l>
<l>dev_display (ImageApproachFinderPattern)</l>
<c>* </c>
<l>dev_set_window (WindowHandle)</l>
<l>dev_display (Image)</l>
<l>Text := 'Acquire an image of a calibration plate in the measurement plane,'</l>
<l>Text[1] := 'and approach one of the finder patterns with your robot gripper.'</l>
<l>Text[2] := 'Read the image as ImageRowCol, and the pose as'</l>
<l>Text[3] := 'ToolInBasePoseApproached.'</l>
<l>Text[4] := 'The finder pattern you approach during this calibration process'</l>
<l>Text[5] := 'should cover the corners of the measurement plane.'</l>
<l>dev_disp_text (Text, 'window', 'top', 'left', 'black', [], [])</l>
<l>dev_disp_text ('Press Run (F5) to continue', 'window', 'bottom', 'right', 'black', [], [])</l>
<l>return ()</l>
</body>
<docu id="dev_disp_calibration_instruction">
<chapters lang="en_US">
<item>Graphics</item>
<item>Text</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="Image">
<multichannel>optional</multichannel>
<sem_type>image</sem_type>
</parameter>
<parameter id="WindowHandle">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>window</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="WindowHandleGraphic">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>window</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="dev_disp_click_approached_finder_pattern_instructions">
<interface>
<io>
<par name="Image" base_type="iconic" dimension="0"/>
</io>
</interface>
<body>
<l>dev_display (Image)</l>
<l>Text := 'Please click on the gripper near the finder pattern you approached.'</l>
<l>dev_disp_text (Text, 'window', 'top', 'left', 'black', [], [])</l>
<l>return ()</l>
</body>
<docu id="dev_disp_click_approached_finder_pattern_instructions">
<chapters lang="en_US">
<item>Graphics</item>
<item>Text</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="Image">
<multivalue>false</multivalue>
<sem_type>image</sem_type>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="dev_disp_touching_point_position">
<interface>
<io>
<par name="Image" base_type="iconic" dimension="0"/>
</io>
<ic>
<par name="RowFinderPattern" base_type="ctrl" dimension="0"/>
<par name="ColumnFinderPattern" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>dev_display (Image)</l>
<l>gen_cross_contour_xld (Cross, RowFinderPattern, ColumnFinderPattern, 100, 0.785398)</l>
<l>dev_display (Cross)</l>
<l>Text := 'Please check the position of the finder pattern.'</l>
<l>dev_disp_text (Text, 'window', 'top', 'left', 'black', [], [])</l>
<l>dev_disp_text ('Press Run (F5) to continue', 'window', 'bottom', 'right', 'black', [], [])</l>
<l>return ()</l>
</body>
<docu id="dev_disp_touching_point_position">
<chapters lang="en_US">
<item>Graphics</item>
<item>Text</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="ColumnFinderPattern">
<default_type>real</default_type>
<multivalue>false</multivalue>
<sem_type>point.x</sem_type>
<type_list>
<item>integer</item>
<item>real</item>
</type_list>
</parameter>
<parameter id="Image">
<multivalue>false</multivalue>
<sem_type>image</sem_type>
</parameter>
<parameter id="RowFinderPattern">
<default_type>real</default_type>
<multivalue>false</multivalue>
<sem_type>point.y</sem_type>
<type_list>
<item>integer</item>
<item>real</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="dev_disp_calibration_errors">
<interface>
<io>
<par name="Image" base_type="iconic" dimension="0"/>
</io>
<ic>
<par name="HandEyeCalibData" base_type="ctrl" dimension="0"/>
<par name="WindowHandle" base_type="ctrl" dimension="0"/>
<par name="ErrorOccurred" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="ContinueCalibration" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<l>dev_clear_window ()</l>
<l>Text := 'Quality of the results:'</l>
<l>Text[1] := '   RMS error of points in the plane:  ' + (HandEyeCalibData.PlanePointsRMS * 1000)$'4.3f' + ' mm'</l>
<l>Text[2] := '   Max. error of points in the plane: ' + (HandEyeCalibData.PlanePointsMaxDiff * 1000)$'4.3f' + ' mm'</l>
<l>dev_disp_text (Text, 'window', 'top', 'left', 'white', 'box', 'false')</l>
<l>if (ErrorOccurred)</l>
<l>    ErrorText := 'Error while reading images and poses.'</l>
<l>    ErrorText[1] := 'Please acquire new images or continue with these results.'</l>
<l>    dev_disp_text (ErrorText, 'window', 250, 12, 'white', 'box_color', 'red')</l>
<l>endif</l>
<c>* </c>
<l>ButtonLabel := ['Continue with these results.', 'Continue with calibration, acquire more images and poses.']</l>
<l>Row1 := [240, 320]</l>
<l>Column1 := [25, 25]</l>
<l>HeightButton := [56, 56]</l>
<l>WidthButton := [600, 600]</l>
<l>ColorString := 'black'</l>
<l>ColorBackground := 'orange'</l>
<l>ColorBackgroundActive := 'yellow'</l>
<c>* </c>
<l>dev_disp_button (ButtonLabel, Row1, Column1, WidthButton, HeightButton, ColorString, ColorBackground, ColorBackgroundActive, WindowHandle, SelectedButton)</l>
<c>* </c>
<l>if (SelectedButton == 0)</l>
<l>    ContinueCalibration := 0</l>
<l>else</l>
<l>    ContinueCalibration := 1</l>
<l>endif</l>
<l>return ()</l>
</body>
<docu id="dev_disp_calibration_errors">
<chapters lang="en_US">
<item>Graphics</item>
<item>Text</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="ContinueCalibration">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>integer</sem_type>
<type_list>
<item>integer</item>
<item>string</item>
</type_list>
<value_list>
<item>'true'</item>
<item>'false'</item>
</value_list>
<value_max>1</value_max>
<value_min>0</value_min>
</parameter>
<parameter id="ErrorOccurred"/>
<parameter id="HandEyeCalibData">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>dict</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="Image">
<multivalue>false</multivalue>
<sem_type>image</sem_type>
</parameter>
<parameter id="WindowHandle">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>window</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="gen_gripper_object_model_3d">
<interface>
<ic>
<par name="PlaneInBasePose" base_type="ctrl" dimension="0"/>
<par name="ToolInBasePoseOrthToPlane" base_type="ctrl" dimension="0"/>
<par name="RobotTouchingPointInToolCoordinates" base_type="ctrl" dimension="0"/>
<par name="GripperLength" base_type="ctrl" dimension="0"/>
<par name="ToolInBasePoses" base_type="ctrl" dimension="1"/>
</ic>
<oc>
<par name="OM3DGripper" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* Determine the gripper position relative to the tool up to the unknown z-rotation.</c>
<l>align_gripper_at_plane (PlaneInBasePose, ToolInBasePoseOrthToPlane, RobotTouchingPointInToolCoordinates, GripperInToolPose)</l>
<l>create_pose (0, 0, 0, 0, 0, 0, 'Rp+T', 'gba', 'point', IdentityPose)</l>
<l>gen_box_object_model_3d (IdentityPose, GripperLength, GripperLength, GripperLength / 4, OM3DToolPlateOrigin)</l>
<l>create_pose (0, 0, GripperLength / 2, 0, 0, 0, 'Rp+T', 'gba', 'point', TransZPose)</l>
<l>gen_box_object_model_3d (TransZPose, GripperLength / 6, GripperLength / 6, GripperLength, OM3DToolZOrigin)</l>
<l>OM3DToolOrigin := [OM3DToolPlateOrigin,OM3DToolZOrigin]</l>
<l>create_pose (0, 0, -GripperLength, 0, 0, 0, 'Rp+T', 'gba', 'point', TransZPose1)</l>
<l>rigid_trans_object_model_3d (OM3DToolOrigin, TransZPose1, ObjectModel3DRigidTrans)</l>
<l>OM3DGripper := []</l>
<l>for Index := 0 to ToolInBasePoses.length() - 1 by 1</l>
<l>    pose_compose (ToolInBasePoses.at(Index), GripperInToolPose, PoseCompose)</l>
<l>    rigid_trans_object_model_3d (ObjectModel3DRigidTrans, PoseCompose, OM3DTool)</l>
<l>    OM3DGripper := [OM3DGripper,OM3DTool]</l>
<l>endfor</l>
<l>return ()</l>
</body>
<docu id="gen_gripper_object_model_3d">
<chapters lang="en_US">
<item>3D Object Model</item>
<item>Creation</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="GripperLength">
<default_type>real</default_type>
<description lang="en_US">Length of the gripper, in [m].</description>
<multivalue>false</multivalue>
<sem_type>real</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
<parameter id="OM3DGripper">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>true</multivalue>
<sem_type>object_model_3d</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="PlaneInBasePose">
<default_type>real</default_type>
<multivalue>true</multivalue>
<sem_type>pose</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
<parameter id="RobotTouchingPointInToolCoordinates">
<default_type>real</default_type>
<multivalue>true</multivalue>
<sem_type>coordinates</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
<parameter id="ToolInBasePoseOrthToPlane">
<default_type>real</default_type>
<multivalue>true</multivalue>
<sem_type>pose</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
<parameter id="ToolInBasePoses">
<default_type>real</default_type>
<multivalue>true</multivalue>
<sem_type>pose</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="dev_disp_acquire_manual_calib_data_instructions">
<interface>
<io>
<par name="Image" base_type="iconic" dimension="0"/>
</io>
</interface>
<body>
<l>dev_display (Image)</l>
<l>Text := 'In the code, please read an image with a \'touching point\''</l>
<l>Text[1] := 'that you can approach easily with your robot gripper.'</l>
<l>Text[2] := 'For example, here, we use a sheet of paper with an X on it.'</l>
<l>Text[3] := ''</l>
<l>Text[4] := 'Then, approach this touching point and read the pose.'</l>
<l>Text[5] := 'The points you approach during this calibration process should cover'</l>
<l>Text[6] := 'the corners of the measurement plane.'</l>
<l>dev_disp_text (Text, 'window', 'top', 'left', 'black', [], [])</l>
<l>dev_disp_text ('Press Run (F5) to continue', 'window', 'bottom', 'right', 'black', [], [])</l>
<l>return ()</l>
</body>
<docu id="dev_disp_acquire_manual_calib_data_instructions">
<chapters lang="en_US">
<item>Graphics</item>
<item>Text</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="Image">
<multivalue>false</multivalue>
<sem_type>image</sem_type>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="dev_disp_move_cross_instructions">
<interface>
<io>
<par name="Image" base_type="iconic" dimension="0"/>
</io>
</interface>
<body>
<l>dev_display (Image)</l>
<l>Text := 'Please mark the touching point (center of the cross) with the left mouse'</l>
<l>Text[1] := 'button, and confirm with the right mouse button.'</l>
<l>dev_disp_text (Text, 'window', 'top', 'left', 'black', 'box_color', '#fce9d499')</l>
<l>return ()</l>
</body>
<docu id="dev_disp_move_cross_instructions">
<chapters lang="en_US">
<item>Graphics</item>
<item>Text</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="Image">
<multivalue>false</multivalue>
<sem_type>image</sem_type>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="visualize_results_in_3d">
<interface>
<ic>
<par name="ToolInBasePoses" base_type="ctrl" dimension="1"/>
<par name="WindowHandle" base_type="ctrl" dimension="0"/>
<par name="RobotTouchingPointInToolCoordinates" base_type="ctrl" dimension="0"/>
<par name="HandEyeCalibData" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>assemble_visualization_parameters (ToolInBasePoses, Instructions, GenParamNameTools, GenParamNameGripper, GenParamValueTools, GenParamValueGripper, LabelsTools, LabelsGripper)</l>
<c>* </c>
<l>gen_robot_tool_and_base_object_model_3d (0.005, 0.1, OM3DToolOrigin, OM3DBase)</l>
<c>* </c>
<l>OM3DToolPositions := []</l>
<l>for Index := 0 to ToolInBasePoses.length() - 1 by 1</l>
<l>    rigid_trans_object_model_3d (OM3DToolOrigin, ToolInBasePoses.at(Index), OM3DTool)</l>
<l>    OM3DToolPositions := [OM3DToolPositions,OM3DTool]</l>
<l>endfor</l>
<c>* </c>
<l>gen_current_setup_stationary_cam_object_model_3d (0.005, 0.1, 0.1, HandEyeCalibData, OM3DCamera, OM3DPlane, OM3DBase, OM3DToolOrigin)</l>
<l>create_pose (0.228, 0.458, 15.046, 130.8, 353.9, 57.2, 'Rp+T', 'gba', 'point', PoseIn)</l>
<l>visualize_object_model_3d (WindowHandle, [OM3DToolPositions,OM3DPlane,OM3DCamera,OM3DBase], [], PoseIn, GenParamNameTools, GenParamValueTools, 'Final hand-eye calibration', LabelsTools, Instructions, PoseOut)</l>
<c>* </c>
<c>* For visualization of the gripper please specify the pose</c>
<c>* where the gripper was positioned orthogonal to the plane.</c>
<c>* Here we use the third position.</c>
<l>ToolInBasePoseOrthToPlane := ToolInBasePoses.at(2)</l>
<c>* For visualization, please specify the length of the gripper in [m].</c>
<l>GripperLength := 0.1</l>
<l>if (|ToolInBasePoseOrthToPlane| &gt; 0)</l>
<l>    ToolInBasePoseOrthToPlane := ToolInBasePoses.at(2)</l>
<l>    gen_gripper_object_model_3d (HandEyeCalibData.PlaneInBasePose, ToolInBasePoseOrthToPlane, RobotTouchingPointInToolCoordinates, GripperLength, ToolInBasePoses, OM3DGripper)</l>
<l>    visualize_object_model_3d (WindowHandle, [OM3DGripper,OM3DPlane,OM3DCamera,OM3DBase], [], PoseOut, GenParamNameGripper, GenParamValueGripper, 'Gripper positions while approaching the measurement plane', LabelsGripper, Instructions, PoseOut)</l>
<l>endif</l>
<l>return ()</l>
</body>
<docu id="visualize_results_in_3d">
<chapters lang="en_US">
<item>Graphics</item>
<item>Output</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="HandEyeCalibData">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>dict</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="RobotTouchingPointInToolCoordinates">
<default_type>real</default_type>
<multivalue>true</multivalue>
<sem_type>coordinates</sem_type>
<type_list>
<item>integer</item>
<item>real</item>
</type_list>
</parameter>
<parameter id="ToolInBasePoses">
<default_type>real</default_type>
<multivalue>true</multivalue>
<sem_type>pose</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
<parameter id="WindowHandle">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>window</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="initialize_program">
<interface>
<oc>
<par name="WindowHandle" base_type="ctrl" dimension="0"/>
<par name="ImageDir" base_type="ctrl" dimension="0"/>
<par name="DataDir" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* </c>
<c>* Prepare the graphics window.</c>
<l>dev_close_window ()</l>
<l>dev_open_window_fit_size (0, 0, 1280, 1024, -1, -1, WindowHandle)</l>
<l>set_display_font (WindowHandle, 16, 'mono', 'true', 'false')</l>
<l>set_part_style (WindowHandle, 2)</l>
<l>dev_update_off ()</l>
<c>* </c>
<c>* Set the directory where the images are read.</c>
<l>get_system ('example_dir', ExampleDir)</l>
<l>ImageDir := ExampleDir + '/images/3d_machine_vision/hand_eye/'</l>
<c>* </c>
<c>* Set the directory where the poses are read.</c>
<l>get_current_dir (CurrentDir)</l>
<l>DataDir := CurrentDir + '/'</l>
<l>return ()</l>
</body>
<docu id="initialize_program">
<chapters lang="en_US">
<item>Develop</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="DataDir">
<default_type>string</default_type>
<description lang="en_US">Directory where the camera parameters and poses are read.</description>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="ImageDir">
<default_type>string</default_type>
<description lang="en_US">Directory where the application images are read.</description>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="WindowHandle">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>window</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="dev_disp_introduction_and_calib_plate_decision">
<interface>
<ic>
<par name="WindowHandle" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="UseCalibrationPlate" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* </c>
<l>read_image (Image, '3d_machine_vision/hand_eye/instruction_images/setup_without_object_stationary_cam')</l>
<l>get_window_extents (WindowHandle, Row, Column, Width, Height)</l>
<l>dev_open_window_fit_image (Image, 0, Width + 8, 600, -1, WindowHandleGraphics)</l>
<l>set_part_style (WindowHandleGraphics, 2)</l>
<l>dev_display (Image)</l>
<c>* </c>
<l>dev_set_window (WindowHandle)</l>
<l>Text := 'This example shows how to perform an easy-to-use hand-eye calibration'</l>
<l>Text[1] := 'with a stationary camera. There are two workflows available.'</l>
<l>Text[2] := ''</l>
<l>Text[3] := '1) Use a calibration plate'</l>
<l>Text[4] := '--------------------------'</l>
<l>Text[5] := '1.1) If you have a calibration plate, you can use it to'</l>
<l>Text[6] := '     calibrate the camera and measurement plane.'</l>
<l>Text[7] := '1.2) Then, you calibrate the robot setup by moving the'</l>
<l>Text[8] := '     robot gripper to the finder pattern on the calibration plate.'</l>
<l>Text[9] := ''</l>
<l>Text[10] := '2) Without a calibration plate'</l>
<l>Text[11] := '------------------------------'</l>
<l>Text[12] := '2.1) Approach user-defined locations in your measurement plane, '</l>
<l>Text[13] := '     and approach them with your robot gripper.'</l>
<l>Text[14] := ''</l>
<l>Text[15] := 'Using a calibration plate leads to much more precise results.'</l>
<l>Text[16] := 'Note that the approach without a calibration plate only is suitable'</l>
<l>Text[17] := 'if your camera is perpendicular to the plane.'</l>
<l>Text[18] := ''</l>
<l>Text[19] := 'Please decide whether you want to use a calibration plate'</l>
<l>Text[20] := 'for the hand-eye calibration, and click the appropriate button.'</l>
<l>dev_disp_text (Text, 'window', 'top', 'left', 'white', 'box', 'false')</l>
<c>* </c>
<l>ButtonLabel := ['Use calibration plate.', 'Continue without calibration plate.']</l>
<l>Row1 := [480, 530]</l>
<l>Column1 := [25, 25]</l>
<l>HeightButton := [40, 40]</l>
<l>WidthButton := [675, 675]</l>
<l>ColorString := 'black'</l>
<l>ColorBackground := 'orange'</l>
<l>ColorBackgroundActive := 'yellow'</l>
<c>* </c>
<l>dev_disp_button (ButtonLabel, Row1, Column1, WidthButton, HeightButton, ColorString, ColorBackground, ColorBackgroundActive, WindowHandle, SelectedButton)</l>
<c>* </c>
<l>if (SelectedButton == 0)</l>
<l>    UseCalibrationPlate := 'true'</l>
<l>else</l>
<l>    UseCalibrationPlate := 'false'</l>
<l>endif</l>
<c>* </c>
<l>dev_set_window (WindowHandleGraphics)</l>
<l>dev_close_window ()</l>
<l>return ()</l>
</body>
<docu id="dev_disp_introduction_and_calib_plate_decision">
<chapters lang="en_US">
<item>Graphics</item>
<item>Text</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="UseCalibrationPlate">
<default_type>string</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
<value_list>
<item>'true'</item>
<item>'false'</item>
</value_list>
</parameter>
<parameter id="WindowHandle">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>window</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="dev_disp_touching_point_decision">
<interface>
<ic>
<par name="WindowHandle" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="GetRobotTouchingPointInToolCoordinates" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* </c>
<l>read_image (Image, '3d_machine_vision/hand_eye/instruction_images/robot_touching_point_in_tool_coordinates')</l>
<l>get_window_extents (WindowHandle, Row, Column, Width, Height)</l>
<l>dev_open_window_fit_image (Image, 0, Width + 8, 600, -1, WindowHandleImage)</l>
<l>set_part_style (WindowHandleImage, 2)</l>
<l>dev_display (Image)</l>
<c>* </c>
<l>dev_set_window (WindowHandle)</l>
<l>dev_clear_window ()</l>
<l>Text := 'For the calibration, we need to know where the touching point'</l>
<l>Text[1] := 'of the robot is with respect to the tool coordinates.'</l>
<l>Text[2] := 'You can either specify these coordinates in the code'</l>
<l>Text[3] := 'or calibrate them. '</l>
<l>dev_disp_text (Text, 'window', 'top', 'left', 'white', 'box', 'false')</l>
<c>* </c>
<l>ButtonLabel := ['The touching point coordinates are specified in the code.', 'Calibrate the touching point coordinates.']</l>
<l>Row1 := [200, 280]</l>
<l>Column1 := [25, 25]</l>
<l>HeightButton := [56, 56]</l>
<l>WidthButton := [675, 675]</l>
<l>ColorString := 'black'</l>
<l>ColorBackground := 'orange'</l>
<l>ColorBackgroundActive := 'yellow'</l>
<c>* </c>
<l>dev_disp_button (ButtonLabel, Row1, Column1, WidthButton, HeightButton, ColorString, ColorBackground, ColorBackgroundActive, WindowHandle, SelectedButton)</l>
<l>if (SelectedButton == 1)</l>
<l>    GetRobotTouchingPointInToolCoordinates := 'true'</l>
<l>else</l>
<l>    GetRobotTouchingPointInToolCoordinates := 'false'</l>
<l>endif</l>
<c>* </c>
<l>dev_set_window (WindowHandleImage)</l>
<l>dev_close_window ()</l>
<l>return ()</l>
</body>
<docu id="dev_disp_touching_point_decision">
<chapters lang="en_US">
<item>Graphics</item>
<item>Text</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="GetRobotTouchingPointInToolCoordinates">
<default_type>string</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="WindowHandle">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>window</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="dev_disp_write_dir_instructions">
<interface/>
<body>
<l>dev_clear_window ()</l>
<l>Text := 'Please use the parameter WriteDir to specify the directory'</l>
<l>Text[1] := 'where you want to save the results of this hand-eye calibration.'</l>
<l>dev_disp_text (Text, 'window', 'top', 'left', 'white', 'box', 'false')</l>
<l>dev_disp_text ('Press Run (F5) to continue', 'window', 'bottom', 'right', 'black', [], [])</l>
<l>return ()</l>
</body>
<docu id="dev_disp_write_dir_instructions">
<chapters lang="en_US">
<item>Graphics</item>
<item>Text</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters/>
</docu>
</procedure>
<procedure name="write_hand_eye_calib_results">
<interface>
<ic>
<par name="HandEyeCalibData" base_type="ctrl" dimension="0"/>
<par name="WriteDir" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>write_cam_par (HandEyeCalibData.CamParam, WriteDir + 'campar_hand_eye_stationary_approx.dat')</l>
<l>write_pose (HandEyeCalibData.PlaneInCamPose0, WriteDir + 'plane_in_cam_pose_hand_eye_stationary_approx.dat')</l>
<l>write_pose (HandEyeCalibData.BaseInCamPose, WriteDir + 'base_in_cam_pose_hand_eye_stationary_approx.dat')</l>
<l>return ()</l>
</body>
<docu id="write_hand_eye_calib_results">
<chapters lang="en_US">
<item>File</item>
<item>Misc</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="HandEyeCalibData">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>dict</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="WriteDir">
<default_type>string</default_type>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="dev_disp_distance_plane_to_camera_instructions">
<interface>
<ic>
<par name="WindowHandle" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="WindowHandleGraphics" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* </c>
<l>read_image (Image, '3d_machine_vision/hand_eye/instruction_images/distance_plane_to_camera')</l>
<l>get_window_extents (WindowHandle, Row, Column, Width1, Height1)</l>
<l>dev_open_window_fit_image (Image, 0, Width1 + 8, 600, -1, WindowHandleGraphics)</l>
<l>set_part_style (WindowHandleGraphics, 2)</l>
<l>dev_display (Image)</l>
<c>* </c>
<l>dev_set_window (WindowHandle)</l>
<l>Text := 'In the code, please specify the distance from the camera lens'</l>
<l>Text[1] := 'to the plane, in meters.'</l>
<l>dev_clear_window ()</l>
<l>dev_disp_text (Text, 'window', 'top', 'left', 'white', 'box', 'false')</l>
<l>dev_disp_text ('Press Run (F5) to continue', 'window', 'bottom', 'right', 'black', [], [])</l>
<l>return ()</l>
</body>
<docu id="dev_disp_distance_plane_to_camera_instructions">
<chapters lang="en_US">
<item>Graphics</item>
<item>Text</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="WindowHandle">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>window</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
<parameter id="WindowHandleGraphics">
<default_type>integer</default_type>
<mixed_type>false</mixed_type>
<multivalue>false</multivalue>
<sem_type>window</sem_type>
<type_list>
<item>integer</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="assemble_visualization_parameters">
<interface>
<ic>
<par name="ToolInBasePoses" base_type="ctrl" dimension="1"/>
</ic>
<oc>
<par name="Instructions" base_type="ctrl" dimension="0"/>
<par name="GenParamNameTools" base_type="ctrl" dimension="0"/>
<par name="GenParamNameGripper" base_type="ctrl" dimension="0"/>
<par name="GenParamValueTools" base_type="ctrl" dimension="0"/>
<par name="GenParamValueGripper" base_type="ctrl" dimension="0"/>
<par name="LabelsTools" base_type="ctrl" dimension="0"/>
<par name="LabelsGripper" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* Instructions for 3D visualization.</c>
<l>Instructions[0] := 'Rotate: Left button'</l>
<l>Instructions[1] := 'Zoom:   Shift + left button'</l>
<l>Instructions[2] := 'Move:   Ctrl  + left button'</l>
<c>* </c>
<c>* [OM3DToolPositions, OM3DPlane, OM3DCamera, OM3DBase]</c>
<c>* [OM3DGripper, OM3DPlane, OM3DCamera, OM3DBase]</c>
<c>* </c>
<c>* OM3DToolPositions:</c>
<l>IndexTools := 0</l>
<l>GenParamNameTools := []</l>
<l>GenParamValueTools := []</l>
<l>LabelsTools := []</l>
<l>for Index1 := 1 to ToolInBasePoses.length() by 1</l>
<l>    GenParamNameTools := [GenParamNameTools,'color_' + IndexTools,'color_' + (IndexTools + 1),'color_' + (IndexTools + 2)]</l>
<l>    GenParamValueTools := [GenParamValueTools,'red', 'green', 'blue']</l>
<l>    LabelsTools := [LabelsTools,'Tool position ' + Index1,'', '']</l>
<l>    IndexTools := IndexTools + 3</l>
<l>endfor</l>
<c>* OM3DGripper:</c>
<l>IndexGripper := 0</l>
<l>GenParamNameGripper := []</l>
<l>GenParamValueGripper := []</l>
<l>LabelsGripper := []</l>
<l>for Index1 := 1 to ToolInBasePoses.length() by 1</l>
<l>    GenParamNameGripper := [GenParamNameGripper,'color_' + IndexGripper,'color_' + (IndexGripper + 1)]</l>
<l>    GenParamValueGripper := [GenParamValueGripper,'red', 'green']</l>
<l>    LabelsGripper := [LabelsGripper,'Gripper position ' + Index1,'']</l>
<l>    IndexGripper := IndexGripper + 2</l>
<l>endfor</l>
<c>* OM3DPlane:</c>
<l>GenParamNameTools := [GenParamNameTools,'color_' + IndexTools,'alpha_' + IndexTools]</l>
<l>GenParamValueTools := [GenParamValueTools,'gray', 0.7]</l>
<l>GenParamNameGripper := [GenParamNameGripper,'color_' + IndexGripper,'alpha_' + IndexGripper]</l>
<l>GenParamValueGripper := [GenParamValueGripper,'gray', 0.7]</l>
<l>LabelsGripper := [LabelsGripper,'']</l>
<l>LabelsTools := [LabelsTools,'']</l>
<l>IndexTools := IndexTools + 1</l>
<l>IndexGripper := IndexGripper + 1</l>
<c>* OM3DCamera:</c>
<l>GenParamNameTools := [GenParamNameTools,'color_' + IndexTools,'color_' + (IndexTools + 1),'color_' + (IndexTools + 2),'alpha_' + (IndexTools + 2)]</l>
<l>GenParamValueTools := [GenParamValueTools,'magenta', 'plum', 'white', 0.3]</l>
<l>GenParamNameGripper := [GenParamNameGripper,'color_' + IndexGripper,'color_' + (IndexGripper + 1),'color_' + (IndexGripper + 2),'alpha_' + (IndexGripper + 2)]</l>
<l>GenParamValueGripper := [GenParamValueGripper,'magenta', 'plum', 'white', 0.3]</l>
<l>IndexTools := IndexTools + 3</l>
<l>IndexGripper := IndexGripper + 3</l>
<l>LabelsGripper := [LabelsGripper,'', '', '']</l>
<l>LabelsTools := [LabelsTools,'', '', '']</l>
<c>* OM3DBase:</c>
<l>GenParamNameTools := [GenParamNameTools,'color_' + IndexTools,'color_' + (IndexTools + 1),'color_' + (IndexTools + 2),'color_' + (IndexTools + 3)]</l>
<l>GenParamValueTools := [GenParamValueTools,'red', 'green', 'blue', 'gray']</l>
<l>GenParamNameGripper := [GenParamNameGripper,'color_' + IndexGripper,'color_' + (IndexGripper + 1),'color_' + (IndexGripper + 2),'color_' + (IndexGripper + 3)]</l>
<l>GenParamValueGripper := [GenParamValueGripper,'red', 'green', 'blue', 'gray']</l>
<l>IndexTools := IndexTools + 4</l>
<l>IndexGripper := IndexGripper + 4</l>
<l>LabelsGripper := [LabelsGripper,'', '', '', '']</l>
<l>LabelsTools := [LabelsTools,'', '', '', '']</l>
<c>* point_size:</c>
<l>GenParamNameTools := [GenParamNameTools,'point_size']</l>
<l>GenParamValueTools := [GenParamValueTools,1]</l>
<l>GenParamNameGripper := [GenParamNameGripper,'point_size']</l>
<l>GenParamValueGripper := [GenParamValueGripper,1]</l>
<l>return ()</l>
</body>
<docu id="assemble_visualization_parameters">
<chapters lang="en_US">
<item>Tuple</item>
<item>Creation</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="GenParamNameGripper">
<default_type>string</default_type>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="GenParamNameTools">
<default_type>string</default_type>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="GenParamValueGripper">
<default_type>string</default_type>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="GenParamValueTools">
<default_type>string</default_type>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="Instructions">
<default_type>string</default_type>
<multivalue>true</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="LabelsGripper">
<default_type>string</default_type>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="LabelsTools">
<default_type>string</default_type>
<multivalue>false</multivalue>
<sem_type>string</sem_type>
<type_list>
<item>string</item>
</type_list>
</parameter>
<parameter id="ToolInBasePoses">
<default_type>real</default_type>
<multivalue>true</multivalue>
<sem_type>pose</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
<procedure name="align_gripper_at_plane">
<interface>
<ic>
<par name="PlaneInBasePose" base_type="ctrl" dimension="0"/>
<par name="ToolInBasePoseOrthToPlane" base_type="ctrl" dimension="0"/>
<par name="RobotTouchingPointInToolCoordinates" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="GripperInToolPose" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* Get the point where ToolInBasePoseOrthToPlane touches the plane in plane coordinates.</c>
<l>pose_invert (PlaneInBasePose, BaseInPlanePose)</l>
<l>pose_compose (BaseInPlanePose, ToolInBasePoseOrthToPlane, ToolInPlanePoseOrthToPlane)</l>
<l>pose_to_hom_mat3d (ToolInPlanePoseOrthToPlane, HomMat3D)</l>
<l>affine_trans_point_3d (HomMat3D, RobotTouchingPointInToolCoordinates[0], RobotTouchingPointInToolCoordinates[1], RobotTouchingPointInToolCoordinates[2], Qx, Qy, Qz)</l>
<c>* Get the GripperInPlanePoseOrthToPlane such that gripper-z points towards the plane (here plane-z points away from cam).</c>
<l>create_pose (Qx, Qy, Qz, 0, 0, 0, 'Rp+T', 'gba', 'point', GripperInPlanePoseOrthToPlane)</l>
<c>* Get the GripperInToolPose.</c>
<l>pose_compose (PlaneInBasePose, GripperInPlanePoseOrthToPlane, GripperInBasePoseOrthToPlane)</l>
<l>pose_invert (ToolInBasePoseOrthToPlane, BaseInToolPoseOrthToPlane)</l>
<l>pose_compose (BaseInToolPoseOrthToPlane, GripperInBasePoseOrthToPlane, GripperInToolPose)</l>
<l>return ()</l>
</body>
<docu id="align_gripper_at_plane">
<chapters lang="en_US">
<item>Transformations</item>
<item>Poses</item>
</chapters>
<library lang="en_US">MVTec Standard Procedures</library>
<parameters>
<parameter id="GripperInToolPose">
<default_type>real</default_type>
<multivalue>true</multivalue>
<sem_type>pose</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
<parameter id="PlaneInBasePose">
<default_type>real</default_type>
<multivalue>true</multivalue>
<sem_type>pose</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
<parameter id="RobotTouchingPointInToolCoordinates">
<default_type>real</default_type>
<multivalue>true</multivalue>
<sem_type>coordinates</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
<parameter id="ToolInBasePoseOrthToPlane">
<default_type>real</default_type>
<multivalue>true</multivalue>
<sem_type>pose</sem_type>
<type_list>
<item>real</item>
</type_list>
</parameter>
</parameters>
</docu>
</procedure>
</hdevelop>
